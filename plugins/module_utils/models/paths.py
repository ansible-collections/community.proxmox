# generated by datamodel-codegen:
#   filename:  spec.v2.yaml
#   timestamp: 2025-07-18T07:15:30+00:00

from __future__ import annotations

from typing import Annotated, Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel


class ClusterGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Dict[str, Any]]], Field(description='')] = None


ClusterReplicationGetResponse = ClusterGetResponse


class ClusterReplicationPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[str], Field(description='')] = None


ClusterReplicationIdDeleteResponse = ClusterReplicationPostResponse


class ClusterReplicationIdGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Dict[str, Any]], Field(description='')] = None


ClusterReplicationIdPutResponse = ClusterReplicationPostResponse


ClusterMetricsGetResponse = ClusterGetResponse


class Datum(BaseModel):
    disable: Annotated[
        Optional[int], Field(description='Flag to disable the plugin.')
    ] = None
    id: Annotated[Optional[str], Field(description='The ID of the entry.')] = None
    port: Annotated[Optional[int], Field(description='Server network port')] = None
    server: Annotated[
        Optional[str], Field(description='Server dns name or IP address')
    ] = None
    type: Annotated[Optional[str], Field(description='Plugin type.')] = None


class ClusterMetricsServerGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum]], Field(description='')] = None


ClusterMetricsServerIdDeleteResponse = ClusterReplicationPostResponse


ClusterMetricsServerIdGetResponse = ClusterReplicationIdGetResponse


ClusterMetricsServerIdPostResponse = ClusterReplicationPostResponse


ClusterMetricsServerIdPutResponse = ClusterReplicationPostResponse


ClusterConfigGetResponse = ClusterGetResponse


ClusterConfigPostResponse = ClusterReplicationPostResponse


class ClusterConfigApiversionGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[int], Field(description='Cluster Join API version, currently 1')
    ] = None


class Datum1(BaseModel):
    node: Annotated[Optional[str], Field(description='')] = None


class ClusterConfigNodesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum1]], Field(description='')] = None


ClusterConfigNodesNodeDeleteResponse = ClusterReplicationPostResponse


class Data(BaseModel):
    corosync_authkey: Annotated[Optional[str], Field(description='')] = None
    corosync_conf: Annotated[Optional[str], Field(description='')] = None
    warnings: Annotated[Optional[List[str]], Field(description='')] = None


class ClusterConfigNodesNodePostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data], Field(description='')] = None


class NodelistItem(BaseModel):
    name: Annotated[Optional[str], Field(description='The cluster node name.')] = None
    nodeid: Annotated[Optional[int], Field(description='Node id for this node.')] = None
    pve_addr: Annotated[Optional[str], Field(description='')] = None
    pve_fp: Annotated[
        Optional[str], Field(description='Certificate SHA 256 fingerprint.')
    ] = None
    quorum_votes: Annotated[Optional[int], Field(description='')] = None
    ring0_addr: Annotated[
        Optional[str],
        Field(
            description='Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)'
        ),
    ] = None


class Data1(BaseModel):
    config_digest: Annotated[Optional[str], Field(description='')] = None
    nodelist: Annotated[Optional[List[NodelistItem]], Field(description='')] = None
    preferred_node: Annotated[
        Optional[str], Field(description='The cluster node name.')
    ] = None
    totem: Annotated[Optional[Dict[str, Any]], Field(description='')] = None


class ClusterConfigJoinGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data1], Field(description='')] = None


ClusterConfigJoinPostResponse = ClusterReplicationPostResponse


ClusterConfigTotemGetResponse = ClusterReplicationIdGetResponse


ClusterConfigQdeviceGetResponse = ClusterReplicationIdGetResponse


ClusterFirewallGetResponse = ClusterGetResponse


class Datum2(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    digest: Annotated[
        Optional[str],
        Field(
            description='Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.'
        ),
    ] = None
    group: Annotated[Optional[str], Field(description='Security Group name.')] = None


class ClusterFirewallGroupsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum2]], Field(description='')] = None


ClusterFirewallGroupsPostResponse = ClusterReplicationPostResponse


ClusterFirewallGroupsGroupDeleteResponse = ClusterReplicationPostResponse


class Datum3(BaseModel):
    pos: Annotated[Optional[int], Field(description='')] = None


class ClusterFirewallGroupsGroupGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum3]], Field(description='')] = None


ClusterFirewallGroupsGroupPostResponse = ClusterReplicationPostResponse


ClusterFirewallGroupsGroupPosDeleteResponse = ClusterReplicationPostResponse


class Data2(BaseModel):
    action: Annotated[Optional[str], Field(description='')] = None
    comment: Annotated[Optional[str], Field(description='')] = None
    dest: Annotated[Optional[str], Field(description='')] = None
    dport: Annotated[Optional[str], Field(description='')] = None
    enable: Annotated[Optional[int], Field(description='')] = None
    icmp_type: Annotated[Optional[str], Field(alias='icmp-type', description='')] = None
    iface: Annotated[Optional[str], Field(description='')] = None
    ipversion: Annotated[Optional[int], Field(description='')] = None
    log: Annotated[Optional[str], Field(description='Log level for firewall rule')] = (
        None
    )
    macro: Annotated[Optional[str], Field(description='')] = None
    pos: Annotated[Optional[int], Field(description='')] = None
    proto: Annotated[Optional[str], Field(description='')] = None
    source: Annotated[Optional[str], Field(description='')] = None
    sport: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None


class ClusterFirewallGroupsGroupPosGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data2], Field(description='')] = None


ClusterFirewallGroupsGroupPosPutResponse = ClusterReplicationPostResponse


ClusterFirewallRulesGetResponse = ClusterFirewallGroupsGroupGetResponse


ClusterFirewallRulesPostResponse = ClusterReplicationPostResponse


ClusterFirewallRulesPosDeleteResponse = ClusterReplicationPostResponse


ClusterFirewallRulesPosGetResponse = ClusterFirewallGroupsGroupPosGetResponse


ClusterFirewallRulesPosPutResponse = ClusterReplicationPostResponse


class Datum5(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    digest: Annotated[
        Optional[str],
        Field(
            description='Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.'
        ),
    ] = None
    name: Annotated[Optional[str], Field(description='IP set name.')] = None


class ClusterFirewallIpsetGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum5]], Field(description='')] = None


ClusterFirewallIpsetPostResponse = ClusterReplicationPostResponse


ClusterFirewallIpsetNameDeleteResponse = ClusterReplicationPostResponse


class Datum6(BaseModel):
    cidr: Annotated[Optional[str], Field(description='')] = None
    comment: Annotated[Optional[str], Field(description='')] = None
    digest: Annotated[
        Optional[str],
        Field(
            description='Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.'
        ),
    ] = None
    nomatch: Annotated[Optional[int], Field(description='')] = None


class ClusterFirewallIpsetNameGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum6]], Field(description='')] = None


ClusterFirewallIpsetNamePostResponse = ClusterReplicationPostResponse


ClusterFirewallIpsetNameCidrDeleteResponse = ClusterReplicationPostResponse


ClusterFirewallIpsetNameCidrGetResponse = ClusterReplicationIdGetResponse


ClusterFirewallIpsetNameCidrPutResponse = ClusterReplicationPostResponse


class Datum7(BaseModel):
    cidr: Annotated[Optional[str], Field(description='')] = None
    comment: Annotated[Optional[str], Field(description='')] = None
    digest: Annotated[
        Optional[str],
        Field(
            description='Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.'
        ),
    ] = None
    name: Annotated[Optional[str], Field(description='')] = None


class ClusterFirewallAliasesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum7]], Field(description='')] = None


ClusterFirewallAliasesPostResponse = ClusterReplicationPostResponse


ClusterFirewallAliasesNameDeleteResponse = ClusterReplicationPostResponse


ClusterFirewallAliasesNameGetResponse = ClusterReplicationIdGetResponse


ClusterFirewallAliasesNamePutResponse = ClusterReplicationPostResponse


class Data4(BaseModel):
    ebtables: Annotated[
        Optional[int], Field(description='Enable ebtables rules cluster wide.')
    ] = None
    enable: Annotated[
        Optional[int], Field(description='Enable or disable the firewall cluster wide.')
    ] = None
    log_ratelimit: Annotated[
        Optional[str], Field(description='Log ratelimiting settings')
    ] = None
    policy_in: Annotated[Optional[str], Field(description='Input policy.')] = None
    policy_out: Annotated[Optional[str], Field(description='Output policy.')] = None


class ClusterFirewallOptionsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data4], Field(description='')] = None


ClusterFirewallOptionsPutResponse = ClusterReplicationPostResponse


class Datum8(BaseModel):
    descr: Annotated[
        Optional[str], Field(description='More verbose description (if available).')
    ] = None
    macro: Annotated[Optional[str], Field(description='Macro name.')] = None


class ClusterFirewallMacrosGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum8]], Field(description='')] = None


class Datum9(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='')] = None
    ref: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None


class ClusterFirewallRefsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum9]], Field(description='')] = None


class Datum10(BaseModel):
    id: Annotated[Optional[str], Field(description='The job ID.')] = None


class ClusterBackupGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum10]], Field(description='')] = None


ClusterBackupPostResponse = ClusterReplicationPostResponse


ClusterBackupIdDeleteResponse = ClusterReplicationPostResponse


ClusterBackupIdGetResponse = ClusterReplicationIdGetResponse


ClusterBackupIdPutResponse = ClusterReplicationPostResponse


class Child1(BaseModel):
    id: Annotated[
        Optional[str], Field(description='Configuration key of the volume.')
    ] = None
    included: Annotated[
        Optional[int],
        Field(description='Whether the volume is included in the backup or not.'),
    ] = None
    name: Annotated[Optional[str], Field(description='Name of the volume.')] = None
    reason: Annotated[
        Optional[str],
        Field(description='The reason why the volume is included (or excluded).'),
    ] = None


class Child(BaseModel):
    children: Annotated[
        Optional[List[Child1]],
        Field(
            description='The volumes of the guest with the information if they will be included in backups.'
        ),
    ] = None
    id: Annotated[Optional[int], Field(description='VMID of the guest.')] = None
    name: Annotated[Optional[str], Field(description='Name of the guest')] = None
    type: Annotated[
        Optional[str],
        Field(
            description='Type of the guest, VM, CT or unknown for removed but not purged guests.'
        ),
    ] = None


class Data5(BaseModel):
    children: Annotated[Optional[List[Child]], Field(description='')] = None


class ClusterBackupIdIncludedVolumesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[Data5],
        Field(
            description='Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest.'
        ),
    ] = None


class ClusterBackupinfoGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[str], Field(description='Shows stub message')] = None


class Datum11(BaseModel):
    name: Annotated[Optional[str], Field(description='Name of the guest')] = None
    type: Annotated[Optional[str], Field(description='Type of the guest.')] = None
    vmid: Annotated[Optional[int], Field(description='VMID of the guest.')] = None


class ClusterBackupinfoNotBackedUpGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[List[Datum11]], Field(description='Contains the guest objects.')
    ] = None


class Datum12(BaseModel):
    id: Annotated[Optional[str], Field(description='')] = None


class ClusterHaGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum12]], Field(description='')] = None


class Datum13(BaseModel):
    sid: Annotated[Optional[str], Field(description='')] = None


class ClusterHaResourcesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum13]], Field(description='')] = None


ClusterHaResourcesPostResponse = ClusterReplicationPostResponse


ClusterHaResourcesSidDeleteResponse = ClusterReplicationPostResponse


class Data6(BaseModel):
    comment: Annotated[Optional[str], Field(description='Description.')] = None
    digest: Annotated[
        Optional[str],
        Field(description='Can be used to prevent concurrent modifications.'),
    ] = None
    group: Annotated[Optional[str], Field(description='The HA group identifier.')] = (
        None
    )
    max_relocate: Annotated[
        Optional[int],
        Field(
            description='Maximal number of service relocate tries when a service failes to start.'
        ),
    ] = None
    max_restart: Annotated[
        Optional[int],
        Field(
            description='Maximal number of tries to restart the service on a node after its start failed.'
        ),
    ] = None
    sid: Annotated[
        Optional[str],
        Field(
            description='HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        ),
    ] = None
    state: Annotated[Optional[str], Field(description='Requested resource state.')] = (
        None
    )
    type: Annotated[Optional[str], Field(description='The type of the resources.')] = (
        None
    )


class ClusterHaResourcesSidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data6], Field(description='')] = None


ClusterHaResourcesSidPutResponse = ClusterReplicationPostResponse


ClusterHaResourcesSidMigratePostResponse = ClusterReplicationPostResponse


ClusterHaResourcesSidRelocatePostResponse = ClusterReplicationPostResponse


class Datum14(BaseModel):
    group: Annotated[Optional[str], Field(description='')] = None


class ClusterHaGroupsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum14]], Field(description='')] = None


ClusterHaGroupsPostResponse = ClusterReplicationPostResponse


ClusterHaGroupsGroupDeleteResponse = ClusterReplicationPostResponse


ClusterHaGroupsGroupGetResponse = ClusterReplicationPostResponse


ClusterHaGroupsGroupPutResponse = ClusterReplicationPostResponse


ClusterHaStatusGetResponse = ClusterGetResponse


class ClusterHaStatusCurrentGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List], Field(description='')] = None


ClusterHaStatusManagerStatusGetResponse = ClusterReplicationIdGetResponse


ClusterAcmeGetResponse = ClusterGetResponse


class Datum15(BaseModel):
    plugin: Annotated[
        Optional[str], Field(description='Unique identifier for ACME plugin instance.')
    ] = None


class ClusterAcmePluginsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum15]], Field(description='')] = None


ClusterAcmePluginsPostResponse = ClusterReplicationPostResponse


ClusterAcmePluginsIdDeleteResponse = ClusterReplicationPostResponse


ClusterAcmePluginsIdGetResponse = ClusterReplicationIdGetResponse


ClusterAcmePluginsIdPutResponse = ClusterReplicationPostResponse


ClusterAcmeAccountGetResponse = ClusterGetResponse


ClusterAcmeAccountPostResponse = ClusterReplicationPostResponse


ClusterAcmeAccountNameDeleteResponse = ClusterReplicationPostResponse


class Data7(BaseModel):
    account: Annotated[Optional[Dict[str, Any]], Field(description='')] = None
    directory: Annotated[
        Optional[str], Field(description='URL of ACME CA directory endpoint.')
    ] = None
    location: Annotated[Optional[str], Field(description='')] = None
    tos: Annotated[Optional[str], Field(description='')] = None


class ClusterAcmeAccountNameGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data7], Field(description='')] = None


ClusterAcmeAccountNamePutResponse = ClusterReplicationPostResponse


class ClusterAcmeTosGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[str], Field(description='ACME TermsOfService URL.')] = None


class Datum16(BaseModel):
    name: Annotated[Optional[str], Field(description='')] = None
    url: Annotated[
        Optional[str], Field(description='URL of ACME CA directory endpoint.')
    ] = None


class ClusterAcmeDirectoriesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum16]], Field(description='')] = None


class Datum17(BaseModel):
    id: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[
        Optional[str], Field(description='Human readable name, falls back to id')
    ] = None
    schema_: Annotated[
        Optional[Dict[str, Any]], Field(alias='schema', description='')
    ] = None
    type: Annotated[Optional[str], Field(description='')] = None


class ClusterAcmeChallengeSchemaGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum17]], Field(description='')] = None


ClusterCephGetResponse = ClusterGetResponse


ClusterCephMetadataGetResponse = ClusterReplicationIdGetResponse


ClusterCephStatusGetResponse = ClusterReplicationIdGetResponse


class Datum18(BaseModel):
    name: Annotated[Optional[str], Field(description='Flag name.')] = None


class ClusterCephFlagsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum18]], Field(description='')] = None


ClusterCephFlagsPutResponse = ClusterReplicationPostResponse


class ClusterCephFlagsFlagGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[int], Field(description='')] = None


ClusterCephFlagsFlagPutResponse = ClusterReplicationPostResponse


Datum19 = Datum12


class ClusterSdnGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum19]], Field(description='')] = None


ClusterSdnPutResponse = ClusterReplicationPostResponse


ClusterSdnVnetsGetResponse = ClusterGetResponse


ClusterSdnVnetsPostResponse = ClusterReplicationPostResponse


ClusterSdnVnetsVnetDeleteResponse = ClusterReplicationPostResponse


ClusterSdnVnetsVnetGetResponse = ClusterReplicationIdGetResponse


ClusterSdnVnetsVnetPutResponse = ClusterReplicationPostResponse


class Datum20(BaseModel):
    type: Annotated[Optional[str], Field(description='')] = None
    zone: Annotated[Optional[str], Field(description='')] = None


class ClusterSdnZonesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum20]], Field(description='')] = None


ClusterSdnZonesPostResponse = ClusterReplicationPostResponse


ClusterSdnZonesZoneDeleteResponse = ClusterReplicationPostResponse


ClusterSdnZonesZoneGetResponse = ClusterReplicationIdGetResponse


ClusterSdnZonesZonePutResponse = ClusterReplicationPostResponse


class Datum21(BaseModel):
    controller: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None


class ClusterSdnControllersGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum21]], Field(description='')] = None


ClusterSdnControllersPostResponse = ClusterReplicationPostResponse


ClusterSdnControllersControllerDeleteResponse = ClusterReplicationPostResponse


ClusterSdnControllersControllerGetResponse = ClusterReplicationIdGetResponse


ClusterSdnControllersControllerPutResponse = ClusterReplicationPostResponse


ClusterLogGetResponse = ClusterGetResponse


class Datum22(BaseModel):
    content: Annotated[
        Optional[str],
        Field(description='Allowed storage content types (when type == storage).'),
    ] = None
    cpu: Annotated[
        Optional[float],
        Field(description='CPU utilization (when type in node,qemu,lxc).'),
    ] = None
    disk: Annotated[
        Optional[str],
        Field(
            description='Used disk space in bytes (when type in storage), used root image spave for VMs (type in qemu,lxc).'
        ),
    ] = None
    hastate: Annotated[
        Optional[str], Field(description='HA service status (for HA managed VMs).')
    ] = None
    id: Annotated[Optional[str], Field(description='')] = None
    level: Annotated[
        Optional[str], Field(description='Support level (when type == node).')
    ] = None
    maxcpu: Annotated[
        Optional[float],
        Field(description='Number of available CPUs (when type in node,qemu,lxc).'),
    ] = None
    maxdisk: Annotated[
        Optional[int],
        Field(
            description='Storage size in bytes (when type in storage), root image size for VMs (type in qemu,lxc).'
        ),
    ] = None
    maxmem: Annotated[
        Optional[int],
        Field(
            description='Number of available memory in bytes (when type in node,qemu,lxc).'
        ),
    ] = None
    mem: Annotated[
        Optional[str],
        Field(description='Used memory in bytes (when type in node,qemu,lxc).'),
    ] = None
    node: Annotated[
        Optional[str],
        Field(
            description='The cluster node name (when type in node,storage,qemu,lxc).'
        ),
    ] = None
    pool: Annotated[
        Optional[str], Field(description='The pool name (when type in pool,qemu,lxc).')
    ] = None
    status: Annotated[
        Optional[str], Field(description='Resource type dependent status.')
    ] = None
    storage: Annotated[
        Optional[str],
        Field(description='The storage identifier (when type == storage).'),
    ] = None
    type: Annotated[Optional[str], Field(description='Resource type.')] = None
    uptime: Annotated[
        Optional[int],
        Field(description='Node uptime in seconds (when type in node,qemu,lxc).'),
    ] = None


class ClusterResourcesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum22]], Field(description='')] = None


class Datum23(BaseModel):
    upid: Annotated[Optional[str], Field(description='')] = None


class ClusterTasksGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum23]], Field(description='')] = None


ClusterOptionsGetResponse = ClusterReplicationIdGetResponse


ClusterOptionsPutResponse = ClusterReplicationPostResponse


class Datum24(BaseModel):
    id: Annotated[Optional[str], Field(description='')] = None
    ip: Annotated[
        Optional[str], Field(description='[node] IP of the resolved nodename.')
    ] = None
    level: Annotated[
        Optional[str],
        Field(
            description='[node] Proxmox VE Subscription level, indicates if eligible for enterprise support as well as access to the stable Proxmox VE Enterprise Repository.'
        ),
    ] = None
    local: Annotated[
        Optional[int],
        Field(description='[node] Indicates if this is the responding node.'),
    ] = None
    name: Annotated[Optional[str], Field(description='')] = None
    nodeid: Annotated[
        Optional[int],
        Field(description='[node] ID of the node from the corosync configuration.'),
    ] = None
    nodes: Annotated[
        Optional[int],
        Field(description='[cluster] Nodes count, including offline nodes.'),
    ] = None
    online: Annotated[
        Optional[int],
        Field(description='[node] Indicates if the node is online or offline.'),
    ] = None
    quorate: Annotated[
        Optional[int],
        Field(
            description='[cluster] Indicates if there is a majority of nodes online to make decisions'
        ),
    ] = None
    type: Annotated[
        Optional[str],
        Field(
            description='Indicates the type, either cluster or node. The type defines the object properties e.g. quorate available for type cluster.'
        ),
    ] = None
    version: Annotated[
        Optional[int],
        Field(
            description='[cluster] Current version of the corosync configuration file.'
        ),
    ] = None


class ClusterStatusGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum24]], Field(description='')] = None


class ClusterNextidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[int], Field(description='The next free VMID.')] = None


class Datum25(BaseModel):
    cpu: Annotated[Optional[float], Field(description='CPU utilization.')] = None
    level: Annotated[Optional[str], Field(description='Support level.')] = None
    maxcpu: Annotated[Optional[int], Field(description='Number of available CPUs.')] = (
        None
    )
    maxmem: Annotated[
        Optional[int], Field(description='Number of available memory in bytes.')
    ] = None
    mem: Annotated[Optional[int], Field(description='Used memory in bytes.')] = None
    node: Annotated[Optional[str], Field(description='The cluster node name.')] = None
    ssl_fingerprint: Annotated[
        Optional[str],
        Field(description='The SSL fingerprint for the node certificate.'),
    ] = None
    status: Annotated[Optional[str], Field(description='Node status.')] = None
    uptime: Annotated[Optional[int], Field(description='Node uptime in seconds.')] = (
        None
    )


class NodesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum25]], Field(description='')] = None


NodesNodeGetResponse = ClusterGetResponse


class Datum26(BaseModel):
    cpus: Annotated[Optional[float], Field(description='Maximum usable CPUs.')] = None
    lock: Annotated[
        Optional[str], Field(description='The current config lock, if any.')
    ] = None
    maxdisk: Annotated[Optional[int], Field(description='Root disk size in bytes.')] = (
        None
    )
    maxmem: Annotated[Optional[int], Field(description='Maximum memory in bytes.')] = (
        None
    )
    name: Annotated[Optional[str], Field(description='VM name.')] = None
    pid: Annotated[Optional[int], Field(description='PID of running qemu process.')] = (
        None
    )
    qmpstatus: Annotated[Optional[str], Field(description='Qemu QMP agent status.')] = (
        None
    )
    status: Annotated[Optional[str], Field(description='Qemu process status.')] = None
    tags: Annotated[
        Optional[str], Field(description='The current configured tags, if any')
    ] = None
    uptime: Annotated[Optional[int], Field(description='Uptime.')] = None
    vmid: Annotated[Optional[int], Field(description='The (unique) ID of the VM.')] = (
        None
    )


class NodesNodeQemuGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum26]], Field(description='')] = None


NodesNodeQemuPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidDeleteResponse = ClusterReplicationPostResponse


class Datum27(BaseModel):
    subdir: Annotated[Optional[str], Field(description='')] = None


class NodesNodeQemuVmidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum27]], Field(description='')] = None


NodesNodeQemuVmidFirewallGetResponse = ClusterGetResponse


Datum28 = Datum3


class NodesNodeQemuVmidFirewallRulesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum28]], Field(description='')] = None


NodesNodeQemuVmidFirewallRulesPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidFirewallRulesPosDeleteResponse = ClusterReplicationPostResponse


Data8 = Data2


class NodesNodeQemuVmidFirewallRulesPosGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data8], Field(description='')] = None


NodesNodeQemuVmidFirewallRulesPosPutResponse = ClusterReplicationPostResponse


Datum29 = Datum7


class NodesNodeQemuVmidFirewallAliasesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum29]], Field(description='')] = None


NodesNodeQemuVmidFirewallAliasesPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidFirewallAliasesNameDeleteResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidFirewallAliasesNameGetResponse = ClusterReplicationIdGetResponse


NodesNodeQemuVmidFirewallAliasesNamePutResponse = ClusterReplicationPostResponse


Datum30 = Datum5


class NodesNodeQemuVmidFirewallIpsetGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum30]], Field(description='')] = None


NodesNodeQemuVmidFirewallIpsetPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidFirewallIpsetNameDeleteResponse = ClusterReplicationPostResponse


Datum31 = Datum6


class NodesNodeQemuVmidFirewallIpsetNameGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum31]], Field(description='')] = None


NodesNodeQemuVmidFirewallIpsetNamePostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidFirewallIpsetNameCidrDeleteResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidFirewallIpsetNameCidrGetResponse = ClusterReplicationIdGetResponse


NodesNodeQemuVmidFirewallIpsetNameCidrPutResponse = ClusterReplicationPostResponse


class Data9(BaseModel):
    dhcp: Annotated[Optional[int], Field(description='Enable DHCP.')] = None
    enable: Annotated[
        Optional[int], Field(description='Enable/disable firewall rules.')
    ] = None
    ipfilter: Annotated[
        Optional[int],
        Field(
            description="Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added."
        ),
    ] = None
    log_level_in: Annotated[
        Optional[str], Field(description='Log level for incoming traffic.')
    ] = None
    log_level_out: Annotated[
        Optional[str], Field(description='Log level for outgoing traffic.')
    ] = None
    macfilter: Annotated[
        Optional[int], Field(description='Enable/disable MAC address filter.')
    ] = None
    ndp: Annotated[
        Optional[int], Field(description='Enable NDP (Neighbor Discovery Protocol).')
    ] = None
    policy_in: Annotated[Optional[str], Field(description='Input policy.')] = None
    policy_out: Annotated[Optional[str], Field(description='Output policy.')] = None
    radv: Annotated[
        Optional[int], Field(description='Allow sending Router Advertisement.')
    ] = None


class NodesNodeQemuVmidFirewallOptionsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data9], Field(description='')] = None


NodesNodeQemuVmidFirewallOptionsPutResponse = ClusterReplicationPostResponse


class Datum32(BaseModel):
    n: Annotated[Optional[int], Field(description='Line number')] = None
    t: Annotated[Optional[str], Field(description='Line text')] = None


class NodesNodeQemuVmidFirewallLogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum32]], Field(description='')] = None


class Datum33(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None


class NodesNodeQemuVmidFirewallRefsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum33]], Field(description='')] = None


class NodesNodeQemuVmidAgentGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[List[Dict[str, Any]]],
        Field(description='Returns the list of Qemu Agent commands'),
    ] = None


class NodesNodeQemuVmidAgentPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[Dict[str, Any]],
        Field(description='Returns an object with a single `result` property.'),
    ] = None


NodesNodeQemuVmidAgentFsfreezeFreezePostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentFsfreezeStatusPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentFsfreezeThawPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentFstrimPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetFsinfoGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetHostNameGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetMemoryBlockInfoGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetMemoryBlocksGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetOsinfoGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetTimeGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetTimezoneGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetUsersGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentGetVcpusGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentInfoGetResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentNetworkGetInterfacesGetResponse = (
    NodesNodeQemuVmidAgentPostResponse
)


NodesNodeQemuVmidAgentPingPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentShutdownPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentSuspendDiskPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentSuspendHybridPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentSuspendRamPostResponse = NodesNodeQemuVmidAgentPostResponse


NodesNodeQemuVmidAgentSetUserPasswordPostResponse = NodesNodeQemuVmidAgentPostResponse


class Data10(BaseModel):
    pid: Annotated[
        Optional[int],
        Field(description='The PID of the process started by the guest-agent.'),
    ] = None


class NodesNodeQemuVmidAgentExecPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data10], Field(description='')] = None


class Data11(BaseModel):
    err_data: Annotated[
        Optional[str], Field(alias='err-data', description='stderr of the process')
    ] = None
    err_truncated: Annotated[
        Optional[int],
        Field(
            alias='err-truncated', description='true if stderr was not fully captured'
        ),
    ] = None
    exitcode: Annotated[
        Optional[int],
        Field(description='process exit code if it was normally terminated.'),
    ] = None
    exited: Annotated[
        Optional[int], Field(description='Tells if the given command has exited yet.')
    ] = None
    out_data: Annotated[
        Optional[str], Field(alias='out-data', description='stdout of the process')
    ] = None
    out_truncated: Annotated[
        Optional[int],
        Field(
            alias='out-truncated', description='true if stdout was not fully captured'
        ),
    ] = None
    signal: Annotated[
        Optional[int],
        Field(
            description='signal number or exception code if the process was abnormally terminated.'
        ),
    ] = None


class NodesNodeQemuVmidAgentExecStatusGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data11], Field(description='')] = None


class Data12(BaseModel):
    content: Annotated[
        Optional[str], Field(description='The content of the file, maximum 16777216')
    ] = None
    truncated: Annotated[
        Optional[int],
        Field(description='If set to 1, the output is truncated and not complete'),
    ] = None


class NodesNodeQemuVmidAgentFileReadGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[Data12],
        Field(description='Returns an object with a `content` property.'),
    ] = None


NodesNodeQemuVmidAgentFileWritePostResponse = ClusterReplicationPostResponse


class Data13(BaseModel):
    filename: Annotated[Optional[str], Field(description='')] = None


class NodesNodeQemuVmidRrdGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data13], Field(description='')] = None


NodesNodeQemuVmidRrddataGetResponse = ClusterGetResponse


class Data14(BaseModel):
    acpi: Annotated[Optional[int], Field(description='Enable/disable ACPI.')] = None
    agent: Annotated[
        Optional[str],
        Field(description='Enable/disable Qemu GuestAgent and its properties.'),
    ] = None
    arch: Annotated[
        Optional[str],
        Field(description='Virtual processor architecture. Defaults to the host.'),
    ] = None
    args: Annotated[
        Optional[str], Field(description='Arbitrary arguments passed to kvm.')
    ] = None
    audio0: Annotated[
        Optional[str],
        Field(
            description='Configure a audio device, useful in combination with QXL/Spice.'
        ),
    ] = None
    autostart: Annotated[
        Optional[int],
        Field(description='Automatic restart after crash (currently ignored).'),
    ] = None
    balloon: Annotated[
        Optional[int],
        Field(
            description='Amount of target RAM for the VM in MB. Using zero disables the ballon driver.'
        ),
    ] = None
    bios: Annotated[Optional[str], Field(description='Select BIOS implementation.')] = (
        None
    )
    boot: Annotated[
        Optional[str],
        Field(
            description="Specify guest boot order. Use with 'order=', usage with no key or 'legacy=' is deprecated."
        ),
    ] = None
    bootdisk: Annotated[
        Optional[str],
        Field(
            description="Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead."
        ),
    ] = None
    cdrom: Annotated[
        Optional[str], Field(description='This is an alias for option -ide2')
    ] = None
    cicustom: Annotated[
        Optional[str],
        Field(
            description='cloud-init: Specify custom files to replace the automatically generated ones at start.'
        ),
    ] = None
    cipassword: Annotated[
        Optional[str],
        Field(
            description='cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.'
        ),
    ] = None
    citype: Annotated[
        Optional[str],
        Field(
            description='Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.'
        ),
    ] = None
    ciuser: Annotated[
        Optional[str],
        Field(
            description="cloud-init: User name to change ssh keys and password for instead of the image's configured default user."
        ),
    ] = None
    cores: Annotated[
        Optional[int], Field(description='The number of cores per socket.')
    ] = None
    cpu: Annotated[Optional[str], Field(description='Emulated CPU type.')] = None
    cpulimit: Annotated[Optional[float], Field(description='Limit of CPU usage.')] = (
        None
    )
    cpuunits: Annotated[Optional[int], Field(description='CPU weight for a VM.')] = None
    description: Annotated[
        Optional[str],
        Field(
            description='Description for the VM. Only used on the configuration web interface. This is saved as comment inside the configuration file.'
        ),
    ] = None
    digest: Annotated[
        Optional[str],
        Field(
            description='SHA1 digest of configuration file. This can be used to prevent concurrent modifications.'
        ),
    ] = None
    efidisk0: Annotated[
        Optional[str], Field(description='Configure a Disk for storing EFI vars')
    ] = None
    freeze: Annotated[
        Optional[int],
        Field(
            description="Freeze CPU at startup (use 'c' monitor command to start execution)."
        ),
    ] = None
    hookscript: Annotated[
        Optional[str],
        Field(
            description='Script that will be executed during various steps in the vms lifetime.'
        ),
    ] = None
    hostpci0: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci1: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci2: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci3: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci4: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci5: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci6: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci7: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci8: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci9: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci10: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci11: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci12: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci13: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci14: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci15: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci16: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci17: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci18: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci19: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci20: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci21: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci22: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci23: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci24: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci25: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci26: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci27: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci28: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hostpci29: Annotated[
        Optional[str], Field(description='Map host PCI devices into guest.')
    ] = None
    hotplug: Annotated[
        Optional[str],
        Field(
            description="Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory' and 'usb'. Use '0' to disable hotplug completely. Value '1' is an alias for the default 'network,disk,usb'."
        ),
    ] = None
    hugepages: Annotated[
        Optional[str], Field(description='Enable/disable hugepages memory.')
    ] = None
    ide0: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide1: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide2: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide3: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide4: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide5: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide6: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide7: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide8: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide9: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide10: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide11: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide12: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide13: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide14: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide15: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide16: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide17: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide18: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide19: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide20: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide21: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide22: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide23: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide24: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide25: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide26: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide27: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide28: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ide29: Annotated[
        Optional[str],
        Field(description='Use volume as IDE hard disk or CD-ROM (n is 0 to 3).'),
    ] = None
    ipconfig0: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig1: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig2: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig3: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig4: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig5: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig6: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig7: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig8: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig9: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig10: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig11: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig12: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig13: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig14: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig15: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig16: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig17: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig18: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig19: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig20: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig21: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig22: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig23: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig24: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig25: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig26: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig27: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig28: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ipconfig29: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
        ),
    ] = None
    ivshmem: Annotated[
        Optional[str],
        Field(
            description='Inter-VM shared memory. Useful for direct communication between VMs, or to the host.'
        ),
    ] = None
    keephugepages: Annotated[
        Optional[int],
        Field(
            description='Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.'
        ),
    ] = None
    keyboard: Annotated[
        Optional[str],
        Field(
            description="Keybord layout for vnc server. Default is read from the '/etc/pve/datacenter.cfg' configuration file.It should not be necessary to set it."
        ),
    ] = None
    kvm: Annotated[
        Optional[int], Field(description='Enable/disable KVM hardware virtualization.')
    ] = None
    localtime: Annotated[
        Optional[int],
        Field(
            description='Set the real time clock to local time. This is enabled by default if ostype indicates a Microsoft OS.'
        ),
    ] = None
    lock: Annotated[Optional[str], Field(description='Lock/unlock the VM.')] = None
    machine: Annotated[
        Optional[str], Field(description='Specifies the Qemu machine type.')
    ] = None
    memory: Annotated[
        Optional[int],
        Field(
            description='Amount of RAM for the VM in MB. This is the maximum available memory when you use the balloon device.'
        ),
    ] = None
    migrate_downtime: Annotated[
        Optional[float],
        Field(
            description='Set maximum tolerated downtime (in seconds) for migrations.'
        ),
    ] = None
    migrate_speed: Annotated[
        Optional[int],
        Field(
            description='Set maximum speed (in MB/s) for migrations. Value 0 is no limit.'
        ),
    ] = None
    name: Annotated[
        Optional[str],
        Field(
            description='Set a name for the VM. Only used on the configuration web interface.'
        ),
    ] = None
    nameserver: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Sets DNS server IP address for a container. Create will'\n\t    .' automatically use the setting from the host if neither searchdomain nor nameserver'\n\t    .' are set."
        ),
    ] = None
    net0: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net1: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net2: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net3: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net4: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net5: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net6: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net7: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net8: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net9: Annotated[Optional[str], Field(description='Specify network devices.')] = None
    net10: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net11: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net12: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net13: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net14: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net15: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net16: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net17: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net18: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net19: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net20: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net21: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net22: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net23: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net24: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net25: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net26: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net27: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net28: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    net29: Annotated[Optional[str], Field(description='Specify network devices.')] = (
        None
    )
    numa: Annotated[Optional[int], Field(description='Enable/disable NUMA.')] = None
    numa0: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa1: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa2: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa3: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa4: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa5: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa6: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa7: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa8: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa9: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa10: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa11: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa12: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa13: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa14: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa15: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa16: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa17: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa18: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa19: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa20: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa21: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa22: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa23: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa24: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa25: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa26: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa27: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa28: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    numa29: Annotated[Optional[str], Field(description='NUMA topology.')] = None
    onboot: Annotated[
        Optional[int],
        Field(
            description='Specifies whether a VM will be started during system bootup.'
        ),
    ] = None
    ostype: Annotated[
        Optional[str], Field(description='Specify guest operating system.')
    ] = None
    parallel0: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel1: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel2: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel3: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel4: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel5: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel6: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel7: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel8: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel9: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel10: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel11: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel12: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel13: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel14: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel15: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel16: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel17: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel18: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel19: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel20: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel21: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel22: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel23: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel24: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel25: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel26: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel27: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel28: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    parallel29: Annotated[
        Optional[str], Field(description='Map host parallel devices (n is 0 to 2).')
    ] = None
    protection: Annotated[
        Optional[int],
        Field(
            description='Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.'
        ),
    ] = None
    reboot: Annotated[
        Optional[int],
        Field(description="Allow reboot. If set to '0' the VM exit on reboot."),
    ] = None
    rng0: Annotated[
        Optional[str],
        Field(description='Configure a VirtIO-based Random Number Generator.'),
    ] = None
    sata0: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata1: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata2: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata3: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata4: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata5: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata6: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata7: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata8: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata9: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata10: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata11: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata12: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata13: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata14: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata15: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata16: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata17: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata18: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata19: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata20: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata21: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata22: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata23: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata24: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata25: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata26: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata27: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata28: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    sata29: Annotated[
        Optional[str],
        Field(description='Use volume as SATA hard disk or CD-ROM (n is 0 to 5).'),
    ] = None
    scsi0: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi1: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi2: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi3: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi4: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi5: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi6: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi7: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi8: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi9: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi10: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi11: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi12: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi13: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi14: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi15: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi16: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi17: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi18: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi19: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi20: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi21: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi22: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi23: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi24: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi25: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi26: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi27: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi28: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsi29: Annotated[
        Optional[str],
        Field(description='Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).'),
    ] = None
    scsihw: Annotated[Optional[str], Field(description='SCSI controller model')] = None
    searchdomain: Annotated[
        Optional[str],
        Field(
            description="cloud-init: Sets DNS search domains for a container. Create will'\n\t    .' automatically use the setting from the host if neither searchdomain nor nameserver'\n\t    .' are set."
        ),
    ] = None
    serial0: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial1: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial2: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial3: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial4: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial5: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial6: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial7: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial8: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial9: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial10: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial11: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial12: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial13: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial14: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial15: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial16: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial17: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial18: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial19: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial20: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial21: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial22: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial23: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial24: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial25: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial26: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial27: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial28: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    serial29: Annotated[
        Optional[str],
        Field(description='Create a serial device inside the VM (n is 0 to 3)'),
    ] = None
    shares: Annotated[
        Optional[int],
        Field(
            description='Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.'
        ),
    ] = None
    smbios1: Annotated[
        Optional[str], Field(description='Specify SMBIOS type 1 fields.')
    ] = None
    smp: Annotated[
        Optional[int],
        Field(description='The number of CPUs. Please use option -sockets instead.'),
    ] = None
    sockets: Annotated[
        Optional[int], Field(description='The number of CPU sockets.')
    ] = None
    spice_enhancements: Annotated[
        Optional[str], Field(description='Configure additional enhancements for SPICE.')
    ] = None
    sshkeys: Annotated[
        Optional[str],
        Field(
            description='cloud-init: Setup public SSH keys (one key per line, OpenSSH format).'
        ),
    ] = None
    startdate: Annotated[
        Optional[str],
        Field(
            description="Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'."
        ),
    ] = None
    startup: Annotated[
        Optional[str],
        Field(
            description="Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
        ),
    ] = None
    tablet: Annotated[
        Optional[int], Field(description='Enable/disable the USB tablet device.')
    ] = None
    tags: Annotated[
        Optional[str],
        Field(description='Tags of the VM. This is only meta information.'),
    ] = None
    tdf: Annotated[
        Optional[int], Field(description='Enable/disable time drift fix.')
    ] = None
    template: Annotated[
        Optional[int], Field(description='Enable/disable Template.')
    ] = None
    unused0: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused1: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused2: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused3: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused4: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused5: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused6: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused7: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused8: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused9: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused10: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused11: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused12: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused13: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused14: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused15: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused16: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused17: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused18: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused19: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused20: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused21: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused22: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused23: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused24: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused25: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused26: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused27: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused28: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused29: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    usb0: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb1: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb2: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb3: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb4: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb5: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb6: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb7: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb8: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb9: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb10: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb11: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb12: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb13: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb14: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb15: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb16: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb17: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb18: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb19: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb20: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb21: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb22: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb23: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb24: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb25: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb26: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb27: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb28: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    usb29: Annotated[
        Optional[str], Field(description='Configure an USB device (n is 0 to 4).')
    ] = None
    vcpus: Annotated[
        Optional[int], Field(description='Number of hotplugged vcpus.')
    ] = None
    vga: Annotated[Optional[str], Field(description='Configure the VGA hardware.')] = (
        None
    )
    virtio0: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio1: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio2: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio3: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio4: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio5: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio6: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio7: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio8: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio9: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio10: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio11: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio12: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio13: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio14: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio15: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio16: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio17: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio18: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio19: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio20: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio21: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio22: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio23: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio24: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio25: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio26: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio27: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio28: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    virtio29: Annotated[
        Optional[str],
        Field(description='Use volume as VIRTIO hard disk (n is 0 to 15).'),
    ] = None
    vmgenid: Annotated[
        Optional[str],
        Field(
            description="Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly."
        ),
    ] = None
    vmstatestorage: Annotated[
        Optional[str], Field(description='Default storage for VM state volumes/files.')
    ] = None
    watchdog: Annotated[
        Optional[str], Field(description='Create a virtual hardware watchdog device.')
    ] = None


class NodesNodeQemuVmidConfigGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data14], Field(description='The VM configuration.')] = None


NodesNodeQemuVmidConfigPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidConfigPutResponse = ClusterReplicationPostResponse


class Datum34(BaseModel):
    delete: Annotated[
        Optional[int],
        Field(
            description='Indicates a pending delete request if present and not 0. The value 2 indicates a force-delete request.'
        ),
    ] = None
    key: Annotated[Optional[str], Field(description='Configuration option name.')] = (
        None
    )
    pending: Annotated[Optional[str], Field(description='Pending value.')] = None
    value: Annotated[Optional[str], Field(description='Current value.')] = None


class NodesNodeQemuVmidPendingGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum34]], Field(description='')] = None


NodesNodeQemuVmidUnlinkPutResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidVncproxyPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidTermproxyPostResponse = ClusterReplicationPostResponse


class Data15(BaseModel):
    port: Annotated[Optional[str], Field(description='')] = None


class NodesNodeQemuVmidVncwebsocketGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data15], Field(description='')] = None


class NodesNodeQemuVmidSpiceproxyPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[str],
        Field(
            description="Returned values can be directly passed to the 'remote-viewer' application."
        ),
    ] = None


Datum35 = Datum27


class NodesNodeQemuVmidStatusGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum35]], Field(description='')] = None


class Data16(BaseModel):
    agent: Annotated[
        Optional[int], Field(description='Qemu GuestAgent enabled in config.')
    ] = None
    cpus: Annotated[Optional[float], Field(description='Maximum usable CPUs.')] = None
    ha: Annotated[
        Optional[Dict[str, Any]], Field(description='HA manager service status.')
    ] = None
    lock: Annotated[
        Optional[str], Field(description='The current config lock, if any.')
    ] = None
    maxdisk: Annotated[Optional[int], Field(description='Root disk size in bytes.')] = (
        None
    )
    maxmem: Annotated[Optional[int], Field(description='Maximum memory in bytes.')] = (
        None
    )
    name: Annotated[Optional[str], Field(description='VM name.')] = None
    pid: Annotated[Optional[int], Field(description='PID of running qemu process.')] = (
        None
    )
    qmpstatus: Annotated[Optional[str], Field(description='Qemu QMP agent status.')] = (
        None
    )
    spice: Annotated[
        Optional[int], Field(description='Qemu VGA configuration supports spice.')
    ] = None
    status: Annotated[Optional[str], Field(description='Qemu process status.')] = None
    tags: Annotated[
        Optional[str], Field(description='The current configured tags, if any')
    ] = None
    uptime: Annotated[Optional[int], Field(description='Uptime.')] = None
    vmid: Annotated[Optional[int], Field(description='The (unique) ID of the VM.')] = (
        None
    )


class NodesNodeQemuVmidStatusCurrentGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data16], Field(description='')] = None


NodesNodeQemuVmidStatusStartPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidStatusStopPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidStatusResetPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidStatusShutdownPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidStatusRebootPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidStatusSuspendPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidStatusResumePostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidSendkeyPutResponse = ClusterReplicationPostResponse


class Data17(BaseModel):
    hasFeature: Annotated[Optional[int], Field(description='')] = None
    nodes: Annotated[Optional[List[str]], Field(description='')] = None


class NodesNodeQemuVmidFeatureGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data17], Field(description='')] = None


NodesNodeQemuVmidClonePostResponse = ClusterReplicationPostResponse


class NodesNodeQemuVmidMoveDiskPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[str], Field(description='the task ID.')] = None


class Data18(BaseModel):
    allowed_nodes: Annotated[
        Optional[List],
        Field(
            description='List nodes allowed for offline migration, only passed if VM is offline'
        ),
    ] = None
    local_disks: Annotated[
        Optional[List],
        Field(
            description='List local disks including CD-Rom, unsused and not referenced disks'
        ),
    ] = None
    local_resources: Annotated[
        Optional[List], Field(description='List local resources e.g. pci, usb')
    ] = None
    not_allowed_nodes: Annotated[
        Optional[Dict[str, Any]],
        Field(
            description='List not allowed nodes with additional informations, only passed if VM is offline'
        ),
    ] = None
    running: Annotated[Optional[int], Field(description='')] = None


class NodesNodeQemuVmidMigrateGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data18], Field(description='')] = None


NodesNodeQemuVmidMigratePostResponse = NodesNodeQemuVmidMoveDiskPostResponse


NodesNodeQemuVmidMonitorPostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidResizePutResponse = ClusterReplicationPostResponse


class Datum36(BaseModel):
    description: Annotated[
        Optional[str], Field(description='Snapshot description.')
    ] = None
    name: Annotated[
        Optional[str],
        Field(
            description="Snapshot identifier. Value 'current' identifies the current VM."
        ),
    ] = None
    parent: Annotated[
        Optional[str], Field(description='Parent snapshot identifier.')
    ] = None
    snaptime: Annotated[Optional[int], Field(description='Snapshot creation time')] = (
        None
    )
    vmstate: Annotated[Optional[int], Field(description='Snapshot includes RAM.')] = (
        None
    )


class NodesNodeQemuVmidSnapshotGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum36]], Field(description='')] = None


NodesNodeQemuVmidSnapshotPostResponse = NodesNodeQemuVmidMoveDiskPostResponse


NodesNodeQemuVmidSnapshotSnapnameDeleteResponse = NodesNodeQemuVmidMoveDiskPostResponse


NodesNodeQemuVmidSnapshotSnapnameGetResponse = ClusterGetResponse


NodesNodeQemuVmidSnapshotSnapnameConfigGetResponse = ClusterReplicationIdGetResponse


NodesNodeQemuVmidSnapshotSnapnameConfigPutResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidSnapshotSnapnameRollbackPostResponse = (
    NodesNodeQemuVmidMoveDiskPostResponse
)


NodesNodeQemuVmidTemplatePostResponse = ClusterReplicationPostResponse


NodesNodeQemuVmidCloudinitDumpGetResponse = ClusterReplicationPostResponse


class Datum37(BaseModel):
    custom: Annotated[
        Optional[int], Field(description='True if this is a custom CPU model.')
    ] = None
    name: Annotated[
        Optional[str],
        Field(
            description="Name of the CPU model. Identifies it for subsequent API calls. Prefixed with 'custom-' for custom models."
        ),
    ] = None
    vendor: Annotated[
        Optional[str],
        Field(
            description="CPU vendor visible to the guest when this model is selected. Vendor of 'reported-model' in case of custom models."
        ),
    ] = None


class NodesNodeCpuGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum37]], Field(description='')] = None


class Datum38(BaseModel):
    cpus: Annotated[Optional[float], Field(description='Maximum usable CPUs.')] = None
    lock: Annotated[
        Optional[str], Field(description='The current config lock, if any.')
    ] = None
    maxdisk: Annotated[Optional[int], Field(description='Root disk size in bytes.')] = (
        None
    )
    maxmem: Annotated[Optional[int], Field(description='Maximum memory in bytes.')] = (
        None
    )
    maxswap: Annotated[
        Optional[int], Field(description='Maximum SWAP memory in bytes.')
    ] = None
    name: Annotated[Optional[str], Field(description='Container name.')] = None
    status: Annotated[Optional[str], Field(description='LXC Container status.')] = None
    tags: Annotated[
        Optional[str], Field(description='The current configured tags, if any.')
    ] = None
    uptime: Annotated[Optional[int], Field(description='Uptime.')] = None
    vmid: Annotated[Optional[int], Field(description='The (unique) ID of the VM.')] = (
        None
    )


class NodesNodeLxcGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum38]], Field(description='')] = None


NodesNodeLxcPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidDeleteResponse = ClusterReplicationPostResponse


Datum39 = Datum27


class NodesNodeLxcVmidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum39]], Field(description='')] = None


class Data19(BaseModel):
    arch: Annotated[Optional[str], Field(description='OS architecture type.')] = None
    cmode: Annotated[
        Optional[str],
        Field(
            description="Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login)."
        ),
    ] = None
    console: Annotated[
        Optional[int],
        Field(description='Attach a console device (/dev/console) to the container.'),
    ] = None
    cores: Annotated[
        Optional[int],
        Field(
            description='The number of cores assigned to the container. A container can use all available cores by default.'
        ),
    ] = None
    cpulimit: Annotated[
        Optional[float],
        Field(
            description="Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit."
        ),
    ] = None
    cpuunits: Annotated[
        Optional[int],
        Field(
            description='CPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to the weights of all the other running VMs.\n\nNOTE: You can disable fair-scheduler configuration by setting this to 0.'
        ),
    ] = None
    debug: Annotated[
        Optional[int],
        Field(
            description='Try to be more verbose. For now this only enables debug log-level on start.'
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description='Container description. Only used on the configuration web interface.'
        ),
    ] = None
    digest: Annotated[
        Optional[str],
        Field(
            description='SHA1 digest of configuration file. This can be used to prevent concurrent modifications.'
        ),
    ] = None
    features: Annotated[
        Optional[str],
        Field(description='Allow containers access to advanced features.'),
    ] = None
    hookscript: Annotated[
        Optional[str],
        Field(
            description='Script that will be exectued during various steps in the containers lifetime.'
        ),
    ] = None
    hostname: Annotated[
        Optional[str], Field(description='Set a host name for the container.')
    ] = None
    lock: Annotated[Optional[str], Field(description='Lock/unlock the VM.')] = None
    lxc: Annotated[
        Optional[List[List[str]]],
        Field(
            description='Array of lxc low-level configurations ([[key1, value1], [key2, value2] ...]).'
        ),
    ] = None
    memory: Annotated[
        Optional[int], Field(description='Amount of RAM for the VM in MB.')
    ] = None
    mp0: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp1: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp2: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp3: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp4: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp5: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp6: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp7: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp8: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp9: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp10: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp11: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp12: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp13: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp14: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp15: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp16: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp17: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp18: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp19: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp20: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp21: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp22: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp23: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp24: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp25: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp26: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp27: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp28: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    mp29: Annotated[
        Optional[str], Field(description='Use volume as container mount point.')
    ] = None
    nameserver: Annotated[
        Optional[str],
        Field(
            description='Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.'
        ),
    ] = None
    net0: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net1: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net2: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net3: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net4: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net5: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net6: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net7: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net8: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net9: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net10: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net11: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net12: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net13: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net14: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net15: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net16: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net17: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net18: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net19: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net20: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net21: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net22: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net23: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net24: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net25: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net26: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net27: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net28: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    net29: Annotated[
        Optional[str],
        Field(description='Specifies network interfaces for the container.'),
    ] = None
    onboot: Annotated[
        Optional[int],
        Field(
            description='Specifies whether a VM will be started during system bootup.'
        ),
    ] = None
    ostype: Annotated[
        Optional[str],
        Field(
            description="OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup."
        ),
    ] = None
    protection: Annotated[
        Optional[int],
        Field(
            description="Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation."
        ),
    ] = None
    rootfs: Annotated[
        Optional[str], Field(description='Use volume as container root.')
    ] = None
    searchdomain: Annotated[
        Optional[str],
        Field(
            description='Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.'
        ),
    ] = None
    startup: Annotated[
        Optional[str],
        Field(
            description="Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
        ),
    ] = None
    swap: Annotated[
        Optional[int], Field(description='Amount of SWAP for the VM in MB.')
    ] = None
    tags: Annotated[
        Optional[str],
        Field(description='Tags of the Container. This is only meta information.'),
    ] = None
    template: Annotated[
        Optional[int], Field(description='Enable/disable Template.')
    ] = None
    timezone: Annotated[
        Optional[str],
        Field(
            description="Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab"
        ),
    ] = None
    tty: Annotated[
        Optional[int],
        Field(description='Specify the number of tty available to the container'),
    ] = None
    unprivileged: Annotated[
        Optional[int],
        Field(
            description='Makes the container run as unprivileged user. (Should not be modified manually.)'
        ),
    ] = None
    unused0: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused1: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused2: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused3: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused4: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused5: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused6: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused7: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused8: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused9: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused10: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused11: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused12: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused13: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused14: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused15: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused16: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused17: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused18: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused19: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused20: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused21: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused22: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused23: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused24: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused25: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused26: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused27: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused28: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None
    unused29: Annotated[
        Optional[str],
        Field(
            description='Reference to unused volumes. This is used internally, and should not be modified manually.'
        ),
    ] = None


class NodesNodeLxcVmidConfigGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data19], Field(description='')] = None


NodesNodeLxcVmidConfigPutResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidStatusGetResponse = NodesNodeLxcVmidGetResponse


class Data20(BaseModel):
    cpus: Annotated[Optional[float], Field(description='Maximum usable CPUs.')] = None
    ha: Annotated[
        Optional[Dict[str, Any]], Field(description='HA manager service status.')
    ] = None
    lock: Annotated[
        Optional[str], Field(description='The current config lock, if any.')
    ] = None
    maxdisk: Annotated[Optional[int], Field(description='Root disk size in bytes.')] = (
        None
    )
    maxmem: Annotated[Optional[int], Field(description='Maximum memory in bytes.')] = (
        None
    )
    maxswap: Annotated[
        Optional[int], Field(description='Maximum SWAP memory in bytes.')
    ] = None
    name: Annotated[Optional[str], Field(description='Container name.')] = None
    status: Annotated[Optional[str], Field(description='LXC Container status.')] = None
    tags: Annotated[
        Optional[str], Field(description='The current configured tags, if any.')
    ] = None
    uptime: Annotated[Optional[int], Field(description='Uptime.')] = None
    vmid: Annotated[Optional[int], Field(description='The (unique) ID of the VM.')] = (
        None
    )


class NodesNodeLxcVmidStatusCurrentGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data20], Field(description='')] = None


NodesNodeLxcVmidStatusStartPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidStatusStopPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidStatusShutdownPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidStatusSuspendPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidStatusResumePostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidStatusRebootPostResponse = ClusterReplicationPostResponse


class Datum41(BaseModel):
    description: Annotated[
        Optional[str], Field(description='Snapshot description.')
    ] = None
    name: Annotated[
        Optional[str],
        Field(
            description="Snapshot identifier. Value 'current' identifies the current VM."
        ),
    ] = None
    parent: Annotated[
        Optional[str], Field(description='Parent snapshot identifier.')
    ] = None
    snaptime: Annotated[Optional[int], Field(description='Snapshot creation time')] = (
        None
    )


class NodesNodeLxcVmidSnapshotGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum41]], Field(description='')] = None


NodesNodeLxcVmidSnapshotPostResponse = NodesNodeQemuVmidMoveDiskPostResponse


NodesNodeLxcVmidSnapshotSnapnameDeleteResponse = NodesNodeQemuVmidMoveDiskPostResponse


NodesNodeLxcVmidSnapshotSnapnameGetResponse = ClusterGetResponse


NodesNodeLxcVmidSnapshotSnapnameRollbackPostResponse = (
    NodesNodeQemuVmidMoveDiskPostResponse
)


NodesNodeLxcVmidSnapshotSnapnameConfigGetResponse = ClusterReplicationIdGetResponse


NodesNodeLxcVmidSnapshotSnapnameConfigPutResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallGetResponse = ClusterGetResponse


Datum42 = Datum3


class NodesNodeLxcVmidFirewallRulesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum42]], Field(description='')] = None


NodesNodeLxcVmidFirewallRulesPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallRulesPosDeleteResponse = ClusterReplicationPostResponse


Data21 = Data2


class NodesNodeLxcVmidFirewallRulesPosGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data21], Field(description='')] = None


NodesNodeLxcVmidFirewallRulesPosPutResponse = ClusterReplicationPostResponse


Datum43 = Datum7


class NodesNodeLxcVmidFirewallAliasesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum43]], Field(description='')] = None


NodesNodeLxcVmidFirewallAliasesPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallAliasesNameDeleteResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallAliasesNameGetResponse = ClusterReplicationIdGetResponse


NodesNodeLxcVmidFirewallAliasesNamePutResponse = ClusterReplicationPostResponse


Datum44 = Datum5


class NodesNodeLxcVmidFirewallIpsetGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum44]], Field(description='')] = None


NodesNodeLxcVmidFirewallIpsetPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallIpsetNameDeleteResponse = ClusterReplicationPostResponse


Datum45 = Datum6


class NodesNodeLxcVmidFirewallIpsetNameGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum45]], Field(description='')] = None


NodesNodeLxcVmidFirewallIpsetNamePostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallIpsetNameCidrDeleteResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidFirewallIpsetNameCidrGetResponse = ClusterReplicationIdGetResponse


NodesNodeLxcVmidFirewallIpsetNameCidrPutResponse = ClusterReplicationPostResponse


Data22 = Data9


class NodesNodeLxcVmidFirewallOptionsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data22], Field(description='')] = None


NodesNodeLxcVmidFirewallOptionsPutResponse = ClusterReplicationPostResponse


Datum46 = Datum32


class NodesNodeLxcVmidFirewallLogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum46]], Field(description='')] = None


Datum47 = Datum33


class NodesNodeLxcVmidFirewallRefsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum47]], Field(description='')] = None


Data23 = Data13


class NodesNodeLxcVmidRrdGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data23], Field(description='')] = None


NodesNodeLxcVmidRrddataGetResponse = ClusterGetResponse


NodesNodeLxcVmidVncproxyPostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidTermproxyPostResponse = ClusterReplicationPostResponse


Data24 = Data15


class NodesNodeLxcVmidVncwebsocketGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data24], Field(description='')] = None


NodesNodeLxcVmidSpiceproxyPostResponse = NodesNodeQemuVmidSpiceproxyPostResponse


NodesNodeLxcVmidMigratePostResponse = NodesNodeQemuVmidMoveDiskPostResponse


class Data25(BaseModel):
    hasFeature: Annotated[Optional[int], Field(description='')] = None


class NodesNodeLxcVmidFeatureGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data25], Field(description='')] = None


NodesNodeLxcVmidTemplatePostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidClonePostResponse = ClusterReplicationPostResponse


NodesNodeLxcVmidResizePutResponse = NodesNodeQemuVmidMoveDiskPostResponse


NodesNodeLxcVmidMoveVolumePostResponse = ClusterReplicationPostResponse


class Datum48(BaseModel):
    delete: Annotated[
        Optional[int],
        Field(description='Indicates a pending delete request if present and not 0.'),
    ] = None
    key: Annotated[Optional[str], Field(description='Configuration option name.')] = (
        None
    )
    pending: Annotated[Optional[str], Field(description='Pending value.')] = None
    value: Annotated[Optional[str], Field(description='Current value.')] = None


class NodesNodeLxcVmidPendingGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum48]], Field(description='')] = None


NodesNodeCephGetResponse = ClusterGetResponse


NodesNodeCephOsdGetResponse = ClusterReplicationIdGetResponse


NodesNodeCephOsdPostResponse = ClusterReplicationPostResponse


NodesNodeCephOsdOsdidDeleteResponse = ClusterReplicationPostResponse


NodesNodeCephOsdOsdidInPostResponse = ClusterReplicationPostResponse


NodesNodeCephOsdOsdidOutPostResponse = ClusterReplicationPostResponse


NodesNodeCephOsdOsdidScrubPostResponse = ClusterReplicationPostResponse


class Datum49(BaseModel):
    addr: Annotated[Optional[str], Field(description='')] = None
    host: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='The name (ID) for the MDS')] = (
        None
    )
    rank: Annotated[Optional[int], Field(description='')] = None
    standby_replay: Annotated[
        Optional[int],
        Field(
            description='If true, the standby MDS is polling the active MDS for faster recovery (hot standby).'
        ),
    ] = None
    state: Annotated[Optional[str], Field(description='State of the MDS')] = None


class NodesNodeCephMdsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum49]], Field(description='')] = None


NodesNodeCephMdsNameDeleteResponse = ClusterReplicationPostResponse


NodesNodeCephMdsNamePostResponse = ClusterReplicationPostResponse


class Datum50(BaseModel):
    addr: Annotated[Optional[str], Field(description='')] = None
    host: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='The name (ID) for the MGR')] = (
        None
    )
    state: Annotated[Optional[str], Field(description='State of the MGR')] = None


class NodesNodeCephMgrGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum50]], Field(description='')] = None


NodesNodeCephMgrIdDeleteResponse = ClusterReplicationPostResponse


NodesNodeCephMgrIdPostResponse = ClusterReplicationPostResponse


class Datum51(BaseModel):
    addr: Annotated[Optional[str], Field(description='')] = None
    host: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='')] = None


class NodesNodeCephMonGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum51]], Field(description='')] = None


NodesNodeCephMonMonidDeleteResponse = ClusterReplicationPostResponse


NodesNodeCephMonMonidPostResponse = ClusterReplicationPostResponse


class Datum52(BaseModel):
    data_pool: Annotated[
        Optional[str], Field(description='The name of the data pool.')
    ] = None
    metadata_pool: Annotated[
        Optional[str], Field(description='The name of the metadata pool.')
    ] = None
    name: Annotated[Optional[str], Field(description='The ceph filesystem name.')] = (
        None
    )


class NodesNodeCephFsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum52]], Field(description='')] = None


NodesNodeCephFsNamePostResponse = ClusterReplicationPostResponse


class Datum53(BaseModel):
    dev: Annotated[Optional[str], Field(description='')] = None
    gpt: Annotated[Optional[int], Field(description='')] = None
    model: Annotated[Optional[str], Field(description='')] = None
    osdid: Annotated[Optional[int], Field(description='')] = None
    serial: Annotated[Optional[str], Field(description='')] = None
    size: Annotated[Optional[int], Field(description='')] = None
    used: Annotated[Optional[str], Field(description='')] = None
    vendor: Annotated[Optional[str], Field(description='')] = None


class NodesNodeCephDisksGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum53]], Field(description='')] = None


NodesNodeCephConfigGetResponse = ClusterReplicationPostResponse


class Datum54(BaseModel):
    can_update_at_runtime: Annotated[Optional[int], Field(description='')] = None
    level: Annotated[Optional[str], Field(description='')] = None
    mask: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='')] = None
    section: Annotated[Optional[str], Field(description='')] = None
    value: Annotated[Optional[str], Field(description='')] = None


class NodesNodeCephConfigdbGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum54]], Field(description='')] = None


NodesNodeCephInitPostResponse = ClusterReplicationPostResponse


NodesNodeCephStopPostResponse = ClusterReplicationPostResponse


NodesNodeCephStartPostResponse = ClusterReplicationPostResponse


NodesNodeCephRestartPostResponse = ClusterReplicationPostResponse


NodesNodeCephStatusGetResponse = ClusterReplicationIdGetResponse


class Datum55(BaseModel):
    bytes_used: Annotated[Optional[int], Field(description='')] = None
    crush_rule: Annotated[Optional[int], Field(description='')] = None
    crush_rule_name: Annotated[Optional[str], Field(description='')] = None
    min_size: Annotated[Optional[int], Field(description='')] = None
    percent_used: Annotated[Optional[float], Field(description='')] = None
    pg_autoscale_mode: Annotated[Optional[str], Field(description='')] = None
    pg_num: Annotated[Optional[int], Field(description='')] = None
    pool: Annotated[Optional[int], Field(description='')] = None
    pool_name: Annotated[Optional[str], Field(description='')] = None
    size: Annotated[Optional[int], Field(description='')] = None


class NodesNodeCephPoolsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum55]], Field(description='')] = None


NodesNodeCephPoolsPostResponse = ClusterReplicationPostResponse


NodesNodeCephPoolsNameDeleteResponse = ClusterReplicationPostResponse


NodesNodeCephPoolsNamePutResponse = ClusterReplicationPostResponse


NodesNodeCephFlagsGetResponse = ClusterReplicationPostResponse


NodesNodeCephFlagsFlagDeleteResponse = ClusterReplicationPostResponse


NodesNodeCephFlagsFlagPostResponse = ClusterReplicationPostResponse


NodesNodeCephCrushGetResponse = ClusterReplicationPostResponse


Datum56 = Datum32


class NodesNodeCephLogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum56]], Field(description='')] = None


NodesNodeCephRulesGetResponse = ClusterGetResponse


NodesNodeVzdumpPostResponse = ClusterReplicationPostResponse


NodesNodeVzdumpExtractconfigGetResponse = ClusterReplicationPostResponse


NodesNodeServicesGetResponse = ClusterGetResponse


Datum57 = Datum27


class NodesNodeServicesServiceGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum57]], Field(description='')] = None


NodesNodeServicesServiceStateGetResponse = ClusterReplicationIdGetResponse


NodesNodeServicesServiceStartPostResponse = ClusterReplicationPostResponse


NodesNodeServicesServiceStopPostResponse = ClusterReplicationPostResponse


NodesNodeServicesServiceRestartPostResponse = ClusterReplicationPostResponse


NodesNodeServicesServiceReloadPostResponse = ClusterReplicationPostResponse


NodesNodeSubscriptionDeleteResponse = ClusterReplicationPostResponse


NodesNodeSubscriptionGetResponse = ClusterReplicationIdGetResponse


NodesNodeSubscriptionPostResponse = ClusterReplicationPostResponse


NodesNodeSubscriptionPutResponse = ClusterReplicationPostResponse


NodesNodeNetworkDeleteResponse = ClusterReplicationPostResponse


NodesNodeNetworkGetResponse = ClusterGetResponse


NodesNodeNetworkPostResponse = ClusterReplicationPostResponse


NodesNodeNetworkPutResponse = ClusterReplicationPostResponse


NodesNodeNetworkIfaceDeleteResponse = ClusterReplicationPostResponse


class Data26(BaseModel):
    method: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None


class NodesNodeNetworkIfaceGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data26], Field(description='')] = None


NodesNodeNetworkIfacePutResponse = ClusterReplicationPostResponse


class Datum58(BaseModel):
    endtime: Annotated[Optional[int], Field(description='')] = None
    id: Annotated[Optional[str], Field(description='')] = None
    node: Annotated[Optional[str], Field(description='')] = None
    pid: Annotated[Optional[int], Field(description='')] = None
    pstart: Annotated[Optional[int], Field(description='')] = None
    starttime: Annotated[Optional[int], Field(description='')] = None
    status: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None
    upid: Annotated[Optional[str], Field(description='')] = None
    user: Annotated[Optional[str], Field(description='')] = None


class NodesNodeTasksGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum58]], Field(description='')] = None


NodesNodeTasksUpidDeleteResponse = ClusterReplicationPostResponse


NodesNodeTasksUpidGetResponse = ClusterGetResponse


Datum59 = Datum32


class NodesNodeTasksUpidLogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum59]], Field(description='')] = None


class Data27(BaseModel):
    pid: Annotated[Optional[int], Field(description='')] = None
    status: Annotated[Optional[str], Field(description='')] = None


class NodesNodeTasksUpidStatusGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data27], Field(description='')] = None


class Datum60(BaseModel):
    method: Annotated[Optional[str], Field(description='')] = None


class NodesNodeScanGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum60]], Field(description='')] = None


class Datum61(BaseModel):
    pool: Annotated[Optional[str], Field(description='ZFS pool name.')] = None


class NodesNodeScanZfsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum61]], Field(description='')] = None


class Datum62(BaseModel):
    options: Annotated[Optional[str], Field(description='NFS export options.')] = None
    path: Annotated[Optional[str], Field(description='The exported path.')] = None


class NodesNodeScanNfsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum62]], Field(description='')] = None


class Datum63(BaseModel):
    description: Annotated[
        Optional[str], Field(description='Descriptive text from server.')
    ] = None
    share: Annotated[Optional[str], Field(description='The cifs share name.')] = None


class NodesNodeScanCifsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum63]], Field(description='')] = None


class Datum64(BaseModel):
    volname: Annotated[Optional[str], Field(description='The volume name.')] = None


class NodesNodeScanGlusterfsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum64]], Field(description='')] = None


class Datum65(BaseModel):
    portal: Annotated[Optional[str], Field(description='The iSCSI portal name.')] = None
    target: Annotated[Optional[str], Field(description='The iSCSI target name.')] = None


class NodesNodeScanIscsiGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum65]], Field(description='')] = None


class Datum66(BaseModel):
    vg: Annotated[
        Optional[str], Field(description='The LVM logical volume group name.')
    ] = None


class NodesNodeScanLvmGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum66]], Field(description='')] = None


class Datum67(BaseModel):
    lv: Annotated[
        Optional[str], Field(description='The LVM Thin Pool name (LVM logical volume).')
    ] = None


class NodesNodeScanLvmthinGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum67]], Field(description='')] = None


class Datum68(BaseModel):
    busnum: Annotated[Optional[int], Field(description='')] = None
    class_: Annotated[Optional[int], Field(alias='class', description='')] = None
    devnum: Annotated[Optional[int], Field(description='')] = None
    level: Annotated[Optional[int], Field(description='')] = None
    manufacturer: Annotated[Optional[str], Field(description='')] = None
    port: Annotated[Optional[int], Field(description='')] = None
    prodid: Annotated[Optional[str], Field(description='')] = None
    product: Annotated[Optional[str], Field(description='')] = None
    serial: Annotated[Optional[str], Field(description='')] = None
    speed: Annotated[Optional[str], Field(description='')] = None
    usbpath: Annotated[Optional[str], Field(description='')] = None
    vendid: Annotated[Optional[str], Field(description='')] = None


class NodesNodeScanUsbGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum68]], Field(description='')] = None


class Datum69(BaseModel):
    type: Annotated[Optional[str], Field(description='')] = None


class NodesNodeHardwareGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum69]], Field(description='')] = None


class Datum70(BaseModel):
    class_: Annotated[
        Optional[str], Field(alias='class', description='The PCI Class of the device.')
    ] = None
    device: Annotated[Optional[str], Field(description='The Device ID.')] = None
    device_name: Annotated[Optional[str], Field(description='')] = None
    id: Annotated[Optional[str], Field(description='The PCI ID.')] = None
    iommugroup: Annotated[
        Optional[int],
        Field(
            description='The IOMMU group in which the device is in. If no IOMMU group is detected, it is set to -1.'
        ),
    ] = None
    mdev: Annotated[
        Optional[int],
        Field(
            description='If set, marks that the device is capable of creating mediated devices.'
        ),
    ] = None
    subsystem_device: Annotated[
        Optional[str], Field(description='The Subsystem Device ID.')
    ] = None
    subsystem_device_name: Annotated[Optional[str], Field(description='')] = None
    subsystem_vendor: Annotated[
        Optional[str], Field(description='The Subsystem Vendor ID.')
    ] = None
    subsystem_vendor_name: Annotated[Optional[str], Field(description='')] = None
    vendor: Annotated[Optional[str], Field(description='The Vendor ID.')] = None
    vendor_name: Annotated[Optional[str], Field(description='')] = None


class NodesNodeHardwarePciGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum70]], Field(description='')] = None


Datum71 = Datum60


class NodesNodeHardwarePciPciidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum71]], Field(description='')] = None


class Datum72(BaseModel):
    available: Annotated[
        Optional[int],
        Field(description='The number of still available instances of this type.'),
    ] = None
    description: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='The name of the mdev type.')] = (
        None
    )


class NodesNodeHardwarePciPciidMdevGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum72]], Field(description='')] = None


class Datum73(BaseModel):
    active: Annotated[
        Optional[int], Field(description='Set when storage is accessible.')
    ] = None
    avail: Annotated[
        Optional[int], Field(description='Available storage space in bytes.')
    ] = None
    content: Annotated[
        Optional[str], Field(description='Allowed storage content types.')
    ] = None
    enabled: Annotated[
        Optional[int], Field(description='Set when storage is enabled (not disabled).')
    ] = None
    shared: Annotated[
        Optional[int], Field(description='Shared flag from storage configuration.')
    ] = None
    storage: Annotated[Optional[str], Field(description='The storage identifier.')] = (
        None
    )
    total: Annotated[
        Optional[int], Field(description='Total storage space in bytes.')
    ] = None
    type: Annotated[Optional[str], Field(description='Storage type.')] = None
    used: Annotated[
        Optional[int], Field(description='Used storage space in bytes.')
    ] = None
    used_fraction: Annotated[
        Optional[float], Field(description='Used fraction (used/total).')
    ] = None


class NodesNodeStorageGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum73]], Field(description='')] = None


Datum74 = Datum27


class NodesNodeStorageStorageGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum74]], Field(description='')] = None


NodesNodeStorageStoragePrunebackupsDeleteResponse = ClusterReplicationPostResponse


class Datum75(BaseModel):
    ctime: Annotated[
        Optional[int],
        Field(
            description='Creation time of the backup (seconds since the UNIX epoch).'
        ),
    ] = None
    mark: Annotated[
        Optional[str],
        Field(
            description="Whether the backup would be kept or removed. For backups that don't use the standard naming scheme, it's 'protected'."
        ),
    ] = None
    type: Annotated[
        Optional[str], Field(description="One of 'qemu', 'lxc', 'openvz' or 'unknown'.")
    ] = None
    vmid: Annotated[
        Optional[int], Field(description='The VM the backup belongs to.')
    ] = None
    volid: Annotated[Optional[str], Field(description='Backup volume ID.')] = None


class NodesNodeStorageStoragePrunebackupsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum75]], Field(description='')] = None


class Verification(BaseModel):
    state: Annotated[
        Optional[str], Field(description='Last backup verification state.')
    ] = None
    upid: Annotated[
        Optional[str], Field(description='Last backup verification UPID.')
    ] = None


class Datum76(BaseModel):
    ctime: Annotated[
        Optional[int],
        Field(description='Creation time (seconds since the UNIX Epoch).'),
    ] = None
    format: Annotated[
        Optional[str],
        Field(
            description="Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
        ),
    ] = None
    notes: Annotated[
        Optional[str],
        Field(
            description='Optional notes. If they contain multiple lines, only the first one is returned here.'
        ),
    ] = None
    parent: Annotated[
        Optional[str],
        Field(description='Volume identifier of parent (for linked cloned).'),
    ] = None
    size: Annotated[Optional[int], Field(description='Volume size in bytes.')] = None
    used: Annotated[
        Optional[int],
        Field(
            description='Used space. Please note that most storage plugins do not report anything useful here.'
        ),
    ] = None
    verification: Annotated[
        Optional[Verification],
        Field(
            description='Last backup verification result, only useful for PBS storages.'
        ),
    ] = None
    vmid: Annotated[Optional[int], Field(description='Associated Owner VMID.')] = None
    volid: Annotated[Optional[str], Field(description='Volume identifier.')] = None


class NodesNodeStorageStorageContentGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum76]], Field(description='')] = None


class NodesNodeStorageStorageContentPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[str], Field(description='Volume identifier')] = None


NodesNodeStorageStorageContentVolumeDeleteResponse = ClusterReplicationPostResponse


class Data28(BaseModel):
    format: Annotated[
        Optional[str],
        Field(
            description="Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
        ),
    ] = None
    notes: Annotated[Optional[str], Field(description='Optional notes.')] = None
    path: Annotated[Optional[str], Field(description='The Path')] = None
    size: Annotated[Optional[int], Field(description='Volume size in bytes.')] = None
    used: Annotated[
        Optional[int],
        Field(
            description='Used space. Please note that most storage plugins do not report anything useful here.'
        ),
    ] = None


class NodesNodeStorageStorageContentVolumeGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data28], Field(description='')] = None


NodesNodeStorageStorageContentVolumePostResponse = ClusterReplicationPostResponse


NodesNodeStorageStorageContentVolumePutResponse = ClusterReplicationPostResponse


NodesNodeStorageStorageStatusGetResponse = ClusterReplicationIdGetResponse


Data29 = Data13


class NodesNodeStorageStorageRrdGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data29], Field(description='')] = None


NodesNodeStorageStorageRrddataGetResponse = ClusterGetResponse


NodesNodeStorageStorageUploadPostResponse = ClusterReplicationPostResponse


NodesNodeDisksGetResponse = ClusterGetResponse


class Child3(BaseModel):
    free: Annotated[
        Optional[int], Field(description='The free bytes in the physical volume')
    ] = None
    leaf: Annotated[Optional[int], Field(description='')] = None
    name: Annotated[
        Optional[str], Field(description='The name of the physical volume')
    ] = None
    size: Annotated[
        Optional[int], Field(description='The size of the physical volume in bytes')
    ] = None


class Child2(BaseModel):
    children: Annotated[
        Optional[List[Child3]], Field(description='The underlying physical volumes')
    ] = None
    free: Annotated[
        Optional[int], Field(description='The free bytes in the volume group')
    ] = None
    leaf: Annotated[Optional[int], Field(description='')] = None
    name: Annotated[
        Optional[str], Field(description='The name of the volume group')
    ] = None
    size: Annotated[
        Optional[int], Field(description='The size of the volume group in bytes')
    ] = None


class Data30(BaseModel):
    children: Annotated[Optional[List[Child2]], Field(description='')] = None
    leaf: Annotated[Optional[int], Field(description='')] = None


class NodesNodeDisksLvmGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data30], Field(description='')] = None


NodesNodeDisksLvmPostResponse = ClusterReplicationPostResponse


class Datum77(BaseModel):
    lv: Annotated[Optional[str], Field(description='The name of the thinpool.')] = None
    lv_size: Annotated[
        Optional[int], Field(description='The size of the thinpool in bytes.')
    ] = None
    metadata_size: Annotated[
        Optional[int], Field(description='The size of the metadata lv in bytes.')
    ] = None
    metadata_used: Annotated[
        Optional[int], Field(description='The used bytes of the metadata lv.')
    ] = None
    used: Annotated[
        Optional[int], Field(description='The used bytes of the thinpool.')
    ] = None


class NodesNodeDisksLvmthinGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum77]], Field(description='')] = None


NodesNodeDisksLvmthinPostResponse = ClusterReplicationPostResponse


class Datum78(BaseModel):
    device: Annotated[Optional[str], Field(description='The mounted device.')] = None
    options: Annotated[Optional[str], Field(description='The mount options.')] = None
    path: Annotated[Optional[str], Field(description='The mount path.')] = None
    type: Annotated[Optional[str], Field(description='The filesystem type.')] = None
    unitfile: Annotated[
        Optional[str], Field(description='The path of the mount unit.')
    ] = None


class NodesNodeDisksDirectoryGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum78]], Field(description='')] = None


NodesNodeDisksDirectoryPostResponse = ClusterReplicationPostResponse


class Datum79(BaseModel):
    alloc: Annotated[Optional[int], Field(description='')] = None
    dedup: Annotated[Optional[float], Field(description='')] = None
    frag: Annotated[Optional[int], Field(description='')] = None
    free: Annotated[Optional[int], Field(description='')] = None
    health: Annotated[Optional[str], Field(description='')] = None
    name: Annotated[Optional[str], Field(description='')] = None
    size: Annotated[Optional[int], Field(description='')] = None


class NodesNodeDisksZfsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum79]], Field(description='')] = None


NodesNodeDisksZfsPostResponse = ClusterReplicationPostResponse


class Child4(BaseModel):
    cksum: Annotated[Optional[float], Field(description='')] = None
    msg: Annotated[
        Optional[str], Field(description='An optional message about the vdev.')
    ] = None
    name: Annotated[
        Optional[str], Field(description='The name of the vdev or section.')
    ] = None
    read: Annotated[Optional[float], Field(description='')] = None
    state: Annotated[Optional[str], Field(description='The state of the vdev.')] = None
    write: Annotated[Optional[float], Field(description='')] = None


class Data31(BaseModel):
    action: Annotated[
        Optional[str],
        Field(description='Information about the recommended action to fix the state.'),
    ] = None
    children: Annotated[
        Optional[List[Child4]],
        Field(
            description='The pool configuration information, including the vdevs for each section (e.g. spares, cache), may be nested.'
        ),
    ] = None
    errors: Annotated[
        Optional[str], Field(description='Information about the errors on the zpool.')
    ] = None
    name: Annotated[Optional[str], Field(description='The name of the zpool.')] = None
    scan: Annotated[
        Optional[str], Field(description='Information about the last/current scrub.')
    ] = None
    state: Annotated[Optional[str], Field(description='The state of the zpool.')] = None
    status: Annotated[
        Optional[str], Field(description='Information about the state of the zpool.')
    ] = None


class NodesNodeDisksZfsNameGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data31], Field(description='')] = None


class Datum80(BaseModel):
    devpath: Annotated[Optional[str], Field(description='The device path')] = None
    gpt: Annotated[Optional[int], Field(description='')] = None
    health: Annotated[Optional[str], Field(description='')] = None
    model: Annotated[Optional[str], Field(description='')] = None
    osdid: Annotated[Optional[int], Field(description='')] = None
    serial: Annotated[Optional[str], Field(description='')] = None
    size: Annotated[Optional[int], Field(description='')] = None
    used: Annotated[Optional[str], Field(description='')] = None
    vendor: Annotated[Optional[str], Field(description='')] = None
    wwn: Annotated[Optional[str], Field(description='')] = None


class NodesNodeDisksListGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum80]], Field(description='')] = None


class Data32(BaseModel):
    attributes: Annotated[Optional[List], Field(description='')] = None
    health: Annotated[Optional[str], Field(description='')] = None
    text: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None


class NodesNodeDisksSmartGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data32], Field(description='')] = None


NodesNodeDisksInitgptPostResponse = ClusterReplicationPostResponse


Datum81 = Datum12


class NodesNodeAptGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum81]], Field(description='')] = None


NodesNodeAptUpdateGetResponse = ClusterGetResponse


NodesNodeAptUpdatePostResponse = ClusterReplicationPostResponse


NodesNodeAptChangelogGetResponse = ClusterReplicationPostResponse


NodesNodeAptVersionsGetResponse = ClusterGetResponse


NodesNodeFirewallGetResponse = ClusterGetResponse


Datum82 = Datum3


class NodesNodeFirewallRulesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum82]], Field(description='')] = None


NodesNodeFirewallRulesPostResponse = ClusterReplicationPostResponse


NodesNodeFirewallRulesPosDeleteResponse = ClusterReplicationPostResponse


Data33 = Data2


class NodesNodeFirewallRulesPosGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data33], Field(description='')] = None


NodesNodeFirewallRulesPosPutResponse = ClusterReplicationPostResponse


class Data34(BaseModel):
    enable: Annotated[
        Optional[int], Field(description='Enable host firewall rules.')
    ] = None
    log_level_in: Annotated[
        Optional[str], Field(description='Log level for incoming traffic.')
    ] = None
    log_level_out: Annotated[
        Optional[str], Field(description='Log level for outgoing traffic.')
    ] = None
    log_nf_conntrack: Annotated[
        Optional[int], Field(description='Enable logging of conntrack information.')
    ] = None
    ndp: Annotated[
        Optional[int], Field(description='Enable NDP (Neighbor Discovery Protocol).')
    ] = None
    nf_conntrack_allow_invalid: Annotated[
        Optional[int],
        Field(description='Allow invalid packets on connection tracking.'),
    ] = None
    nf_conntrack_max: Annotated[
        Optional[int], Field(description='Maximum number of tracked connections.')
    ] = None
    nf_conntrack_tcp_timeout_established: Annotated[
        Optional[int], Field(description='Conntrack established timeout.')
    ] = None
    nf_conntrack_tcp_timeout_syn_recv: Annotated[
        Optional[int], Field(description='Conntrack syn recv timeout.')
    ] = None
    nosmurfs: Annotated[Optional[int], Field(description='Enable SMURFS filter.')] = (
        None
    )
    protection_synflood: Annotated[
        Optional[int], Field(description='Enable synflood protection')
    ] = None
    protection_synflood_burst: Annotated[
        Optional[int], Field(description='Synflood protection rate burst by ip src.')
    ] = None
    protection_synflood_rate: Annotated[
        Optional[int], Field(description='Synflood protection rate syn/sec by ip src.')
    ] = None
    smurf_log_level: Annotated[
        Optional[str], Field(description='Log level for SMURFS filter.')
    ] = None
    tcp_flags_log_level: Annotated[
        Optional[str], Field(description='Log level for illegal tcp flags filter.')
    ] = None
    tcpflags: Annotated[
        Optional[int], Field(description='Filter illegal combinations of TCP flags.')
    ] = None


class NodesNodeFirewallOptionsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data34], Field(description='')] = None


NodesNodeFirewallOptionsPutResponse = ClusterReplicationPostResponse


Datum83 = Datum32


class NodesNodeFirewallLogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum83]], Field(description='')] = None


Datum84 = Datum12


class NodesNodeReplicationGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum84]], Field(description='')] = None


NodesNodeReplicationIdGetResponse = ClusterGetResponse


NodesNodeReplicationIdStatusGetResponse = ClusterReplicationIdGetResponse


Datum85 = Datum32


class NodesNodeReplicationIdLogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum85]], Field(description='')] = None


NodesNodeReplicationIdScheduleNowPostResponse = ClusterReplicationPostResponse


NodesNodeCertificatesGetResponse = ClusterGetResponse


NodesNodeCertificatesAcmeGetResponse = ClusterGetResponse


NodesNodeCertificatesAcmeCertificateDeleteResponse = ClusterReplicationPostResponse


NodesNodeCertificatesAcmeCertificatePostResponse = ClusterReplicationPostResponse


NodesNodeCertificatesAcmeCertificatePutResponse = ClusterReplicationPostResponse


class Datum86(BaseModel):
    filename: Annotated[Optional[str], Field(description='')] = None
    fingerprint: Annotated[
        Optional[str], Field(description='Certificate SHA 256 fingerprint.')
    ] = None
    issuer: Annotated[Optional[str], Field(description='Certificate issuer name.')] = (
        None
    )
    notafter: Annotated[
        Optional[int],
        Field(description="Certificate's notAfter timestamp (UNIX epoch)."),
    ] = None
    notbefore: Annotated[
        Optional[int],
        Field(description="Certificate's notBefore timestamp (UNIX epoch)."),
    ] = None
    pem: Annotated[Optional[str], Field(description='Certificate in PEM format')] = None
    public_key_bits: Annotated[
        Optional[int],
        Field(alias='public-key-bits', description="Certificate's public key size"),
    ] = None
    public_key_type: Annotated[
        Optional[str],
        Field(
            alias='public-key-type', description="Certificate's public key algorithm"
        ),
    ] = None
    san: Annotated[
        Optional[List[str]],
        Field(description="List of Certificate's SubjectAlternativeName entries."),
    ] = None
    subject: Annotated[
        Optional[str], Field(description='Certificate subject name.')
    ] = None


class NodesNodeCertificatesInfoGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum86]], Field(description='')] = None


NodesNodeCertificatesCustomDeleteResponse = ClusterReplicationPostResponse


Data35 = Datum86


class NodesNodeCertificatesCustomPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data35], Field(description='')] = None


NodesNodeConfigGetResponse = ClusterReplicationIdGetResponse


NodesNodeConfigPutResponse = ClusterReplicationPostResponse


NodesNodeSdnGetResponse = ClusterGetResponse


class Datum87(BaseModel):
    status: Annotated[Optional[str], Field(description='Status of zone')] = None
    zone: Annotated[
        Optional[str], Field(description='The SDN zone object identifier.')
    ] = None


class NodesNodeSdnZonesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum87]], Field(description='')] = None


Datum88 = Datum27


class NodesNodeSdnZonesZoneGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum88]], Field(description='')] = None


class Datum89(BaseModel):
    status: Annotated[Optional[str], Field(description='Status.')] = None
    statusmsg: Annotated[Optional[str], Field(description='Status details')] = None
    vnet: Annotated[Optional[str], Field(description='Vnet identifier.')] = None


class NodesNodeSdnZonesZoneContentGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum89]], Field(description='')] = None


class Data36(BaseModel):
    release: Annotated[
        Optional[str], Field(description='The current installed Proxmox VE Release')
    ] = None
    repoid: Annotated[
        Optional[str],
        Field(
            description='The short git commit hash ID from which this version was build'
        ),
    ] = None
    version: Annotated[
        Optional[str],
        Field(description='The current installed pve-manager package version'),
    ] = None


class NodesNodeVersionGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data36], Field(description='')] = None


NodesNodeStatusGetResponse = ClusterReplicationIdGetResponse


NodesNodeStatusPostResponse = ClusterReplicationPostResponse


NodesNodeNetstatGetResponse = ClusterGetResponse


NodesNodeExecutePostResponse = ClusterHaStatusCurrentGetResponse


class NodesNodeWakeonlanPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[str],
        Field(description='MAC address used to assemble the WoL magic packet.'),
    ] = None


Data37 = Data13


class NodesNodeRrdGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data37], Field(description='')] = None


NodesNodeRrddataGetResponse = ClusterGetResponse


Datum90 = Datum32


class NodesNodeSyslogGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum90]], Field(description='')] = None


class NodesNodeJournalGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[str]], Field(description='')] = None


NodesNodeVncshellPostResponse = ClusterReplicationPostResponse


NodesNodeTermproxyPostResponse = ClusterReplicationPostResponse


Data38 = Data15


class NodesNodeVncwebsocketGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data38], Field(description='')] = None


NodesNodeSpiceshellPostResponse = NodesNodeQemuVmidSpiceproxyPostResponse


class Data39(BaseModel):
    dns1: Annotated[
        Optional[str], Field(description='First name server IP address.')
    ] = None
    dns2: Annotated[
        Optional[str], Field(description='Second name server IP address.')
    ] = None
    dns3: Annotated[
        Optional[str], Field(description='Third name server IP address.')
    ] = None
    search: Annotated[
        Optional[str], Field(description='Search domain for host-name lookup.')
    ] = None


class NodesNodeDnsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data39], Field(description='')] = None


NodesNodeDnsPutResponse = ClusterReplicationPostResponse


class Data40(BaseModel):
    localtime: Annotated[
        Optional[int],
        Field(description='Seconds since 1970-01-01 00:00:00 (local time)'),
    ] = None
    time: Annotated[
        Optional[int], Field(description='Seconds since 1970-01-01 00:00:00 UTC.')
    ] = None
    timezone: Annotated[Optional[str], Field(description='Time zone')] = None


class NodesNodeTimeGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data40], Field(description='')] = None


NodesNodeTimePutResponse = ClusterReplicationPostResponse


NodesNodeAplinfoGetResponse = ClusterGetResponse


NodesNodeAplinfoPostResponse = ClusterReplicationPostResponse


NodesNodeReportGetResponse = ClusterReplicationPostResponse


NodesNodeStartallPostResponse = ClusterReplicationPostResponse


NodesNodeStopallPostResponse = ClusterReplicationPostResponse


NodesNodeMigrateallPostResponse = ClusterReplicationPostResponse


class Data41(BaseModel):
    data: Annotated[Optional[str], Field(description='The content of /etc/hosts.')] = (
        None
    )
    digest: Annotated[
        Optional[str],
        Field(
            description='Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.'
        ),
    ] = None


class NodesNodeHostsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data41], Field(description='')] = None


NodesNodeHostsPostResponse = ClusterReplicationPostResponse


class Datum91(BaseModel):
    storage: Annotated[Optional[str], Field(description='')] = None


class StorageGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum91]], Field(description='')] = None


class Config(BaseModel):
    encryption_key: Annotated[
        Optional[str],
        Field(
            alias='encryption-key',
            description='The, possible auto-generated, encryption-key.',
        ),
    ] = None


class Data42(BaseModel):
    config: Annotated[
        Optional[Config],
        Field(
            description='Partial, possible server generated, configuration properties.'
        ),
    ] = None
    storage: Annotated[
        Optional[str], Field(description='The ID of the created storage.')
    ] = None
    type: Annotated[
        Optional[str], Field(description='The type of the created storage.')
    ] = None


class StoragePostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data42], Field(description='')] = None


StorageStorageDeleteResponse = ClusterReplicationPostResponse


StorageStorageGetResponse = ClusterReplicationIdGetResponse


Data43 = Data42


class StorageStoragePutResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data43], Field(description='')] = None


Datum92 = Datum27


class AccessGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum92]], Field(description='')] = None


class Token(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    expire: Annotated[
        Optional[int],
        Field(
            description="API token expiration date (seconds since epoch). '0' means no expiration date."
        ),
    ] = None
    privsep: Annotated[
        Optional[int],
        Field(
            description='Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.'
        ),
    ] = None
    tokenid: Annotated[
        Optional[str], Field(description='User-specific token identifier.')
    ] = None


class Datum93(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    email: Annotated[Optional[str], Field(description='')] = None
    enable: Annotated[
        Optional[int],
        Field(
            description="Enable the account (default). You can set this to '0' to disable the account"
        ),
    ] = None
    expire: Annotated[
        Optional[int],
        Field(
            description="Account expiration date (seconds since epoch). '0' means no expiration date."
        ),
    ] = None
    firstname: Annotated[Optional[str], Field(description='')] = None
    groups: Annotated[Optional[str], Field(description='')] = None
    keys: Annotated[
        Optional[str], Field(description='Keys for two factor auth (yubico).')
    ] = None
    lastname: Annotated[Optional[str], Field(description='')] = None
    tokens: Annotated[Optional[List[Token]], Field(description='')] = None
    userid: Annotated[Optional[str], Field(description='User ID')] = None


class AccessUsersGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum93]], Field(description='')] = None


AccessUsersPostResponse = ClusterReplicationPostResponse


AccessUsersUseridDeleteResponse = ClusterReplicationPostResponse


class Data44(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    email: Annotated[Optional[str], Field(description='')] = None
    enable: Annotated[
        Optional[int],
        Field(
            description="Enable the account (default). You can set this to '0' to disable the account"
        ),
    ] = None
    expire: Annotated[
        Optional[int],
        Field(
            description="Account expiration date (seconds since epoch). '0' means no expiration date."
        ),
    ] = None
    firstname: Annotated[Optional[str], Field(description='')] = None
    groups: Annotated[Optional[List[str]], Field(description='')] = None
    keys: Annotated[
        Optional[str], Field(description='Keys for two factor auth (yubico).')
    ] = None
    lastname: Annotated[Optional[str], Field(description='')] = None
    tokens: Annotated[Optional[Dict[str, Any]], Field(description='')] = None


class AccessUsersUseridGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data44], Field(description='')] = None


AccessUsersUseridPutResponse = ClusterReplicationPostResponse


class Data45(BaseModel):
    realm: Annotated[
        Optional[str],
        Field(description='The type of TFA the users realm has set, if any.'),
    ] = None
    user: Annotated[
        Optional[str], Field(description='The type of TFA the user has set, if any.')
    ] = None


class AccessUsersUseridTfaGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data45], Field(description='')] = None


Datum94 = Token


class AccessUsersUseridTokenGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum94]], Field(description='')] = None


AccessUsersUseridTokenTokenidDeleteResponse = ClusterReplicationPostResponse


class Data46(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    expire: Annotated[
        Optional[int],
        Field(
            description="API token expiration date (seconds since epoch). '0' means no expiration date."
        ),
    ] = None
    privsep: Annotated[
        Optional[int],
        Field(
            description='Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.'
        ),
    ] = None


class AccessUsersUseridTokenTokenidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data46], Field(description='')] = None


Info = Data46


class Data47(BaseModel):
    full_tokenid: Annotated[
        Optional[str], Field(alias='full-tokenid', description='The full token id.')
    ] = None
    info: Annotated[Optional[Info], Field(description='')] = None
    value: Annotated[
        Optional[str], Field(description='API token value used for authentication.')
    ] = None


class AccessUsersUseridTokenTokenidPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data47], Field(description='')] = None


Data48 = Data46


class AccessUsersUseridTokenTokenidPutResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[Data48], Field(description='Updated token information.')
    ] = None


class AccessGroupsGetResponseItem(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    groupid: Annotated[Optional[str], Field(description='')] = None
    users: Annotated[
        Optional[str], Field(description='list of users which form this group')
    ] = None


class AccessGroupsGetResponse(RootModel[List[AccessGroupsGetResponseItem]]):
    root: Annotated[List[AccessGroupsGetResponseItem], Field(description='')]


AccessGroupsPostResponse = ClusterReplicationPostResponse


AccessGroupsGroupidDeleteResponse = ClusterReplicationPostResponse


class Data49(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    members: Annotated[Optional[List[str]], Field(description='')] = None


class AccessGroupsGroupidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data49], Field(description='')] = None


AccessGroupsGroupidPutResponse = ClusterReplicationPostResponse


class Datum95(BaseModel):
    privs: Annotated[Optional[str], Field(description='')] = None
    roleid: Annotated[Optional[str], Field(description='')] = None
    special: Annotated[Optional[int], Field(description='')] = None


class AccessRolesGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum95]], Field(description='')] = None


AccessRolesPostResponse = ClusterReplicationPostResponse


AccessRolesRoleidDeleteResponse = ClusterReplicationPostResponse


class Data50(BaseModel):
    Datastore_Allocate: Annotated[
        Optional[int], Field(alias='Datastore.Allocate', description='')
    ] = None
    Datastore_AllocateSpace: Annotated[
        Optional[int], Field(alias='Datastore.AllocateSpace', description='')
    ] = None
    Datastore_AllocateTemplate: Annotated[
        Optional[int], Field(alias='Datastore.AllocateTemplate', description='')
    ] = None
    Datastore_Audit: Annotated[
        Optional[int], Field(alias='Datastore.Audit', description='')
    ] = None
    Group_Allocate: Annotated[
        Optional[int], Field(alias='Group.Allocate', description='')
    ] = None
    Permissions_Modify: Annotated[
        Optional[int], Field(alias='Permissions.Modify', description='')
    ] = None
    Pool_Allocate: Annotated[
        Optional[int], Field(alias='Pool.Allocate', description='')
    ] = None
    Realm_Allocate: Annotated[
        Optional[int], Field(alias='Realm.Allocate', description='')
    ] = None
    Realm_AllocateUser: Annotated[
        Optional[int], Field(alias='Realm.AllocateUser', description='')
    ] = None
    SDN_Allocate: Annotated[
        Optional[int], Field(alias='SDN.Allocate', description='')
    ] = None
    SDN_Audit: Annotated[Optional[int], Field(alias='SDN.Audit', description='')] = None
    Sys_Audit: Annotated[Optional[int], Field(alias='Sys.Audit', description='')] = None
    Sys_Console: Annotated[
        Optional[int], Field(alias='Sys.Console', description='')
    ] = None
    Sys_Modify: Annotated[Optional[int], Field(alias='Sys.Modify', description='')] = (
        None
    )
    Sys_PowerMgmt: Annotated[
        Optional[int], Field(alias='Sys.PowerMgmt', description='')
    ] = None
    Sys_Syslog: Annotated[Optional[int], Field(alias='Sys.Syslog', description='')] = (
        None
    )
    User_Modify: Annotated[
        Optional[int], Field(alias='User.Modify', description='')
    ] = None
    VM_Allocate: Annotated[
        Optional[int], Field(alias='VM.Allocate', description='')
    ] = None
    VM_Audit: Annotated[Optional[int], Field(alias='VM.Audit', description='')] = None
    VM_Backup: Annotated[Optional[int], Field(alias='VM.Backup', description='')] = None
    VM_Clone: Annotated[Optional[int], Field(alias='VM.Clone', description='')] = None
    VM_Config_CDROM: Annotated[
        Optional[int], Field(alias='VM.Config.CDROM', description='')
    ] = None
    VM_Config_CPU: Annotated[
        Optional[int], Field(alias='VM.Config.CPU', description='')
    ] = None
    VM_Config_Cloudinit: Annotated[
        Optional[int], Field(alias='VM.Config.Cloudinit', description='')
    ] = None
    VM_Config_Disk: Annotated[
        Optional[int], Field(alias='VM.Config.Disk', description='')
    ] = None
    VM_Config_HWType: Annotated[
        Optional[int], Field(alias='VM.Config.HWType', description='')
    ] = None
    VM_Config_Memory: Annotated[
        Optional[int], Field(alias='VM.Config.Memory', description='')
    ] = None
    VM_Config_Network: Annotated[
        Optional[int], Field(alias='VM.Config.Network', description='')
    ] = None
    VM_Config_Options: Annotated[
        Optional[int], Field(alias='VM.Config.Options', description='')
    ] = None
    VM_Console: Annotated[Optional[int], Field(alias='VM.Console', description='')] = (
        None
    )
    VM_Migrate: Annotated[Optional[int], Field(alias='VM.Migrate', description='')] = (
        None
    )
    VM_Monitor: Annotated[Optional[int], Field(alias='VM.Monitor', description='')] = (
        None
    )
    VM_PowerMgmt: Annotated[
        Optional[int], Field(alias='VM.PowerMgmt', description='')
    ] = None
    VM_Snapshot: Annotated[
        Optional[int], Field(alias='VM.Snapshot', description='')
    ] = None
    VM_Snapshot_Rollback: Annotated[
        Optional[int], Field(alias='VM.Snapshot.Rollback', description='')
    ] = None


class AccessRolesRoleidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data50], Field(description='')] = None


AccessRolesRoleidPutResponse = ClusterReplicationPostResponse


AccessAclPutResponse = ClusterReplicationPostResponse


class Datum96(BaseModel):
    comment: Annotated[
        Optional[str],
        Field(
            description='A comment. The GUI use this text when you select a domain (Realm) on the login window.'
        ),
    ] = None
    realm: Annotated[Optional[str], Field(description='')] = None
    tfa: Annotated[
        Optional[str], Field(description='Two-factor authentication provider.')
    ] = None
    type: Annotated[Optional[str], Field(description='')] = None


class AccessDomainsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[List[Datum96]], Field(description='')] = None


AccessDomainsPostResponse = ClusterReplicationPostResponse


AccessDomainsRealmDeleteResponse = ClusterReplicationPostResponse


AccessDomainsRealmGetResponse = ClusterReplicationPostResponse


AccessDomainsRealmPutResponse = ClusterReplicationPostResponse


class AccessDomainsRealmSyncPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[str], Field(description='Worker Task-UPID')] = None


AccessTicketGetResponse = ClusterReplicationPostResponse


class Data51(BaseModel):
    CSRFPreventionToken: Annotated[Optional[str], Field(description='')] = None
    clustername: Annotated[Optional[str], Field(description='')] = None
    ticket: Annotated[Optional[str], Field(description='')] = None
    username: Annotated[Optional[str], Field(description='')] = None


class AccessTicketPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data51], Field(description='')] = None


AccessPasswordPutResponse = ClusterReplicationPostResponse


class Data52(BaseModel):
    ticket: Annotated[Optional[str], Field(description='')] = None


class AccessTfaPostResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data52], Field(description='')] = None


AccessTfaPutResponse = ClusterReplicationIdGetResponse


class AccessPermissionsGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[
        Optional[Dict[str, Any]],
        Field(
            description='Map of "path" => (Map of "privilege" => "propagate boolean").'
        ),
    ] = None


class PoolsGetResponseItem(BaseModel):
    poolid: Annotated[Optional[str], Field(description='')] = None


class PoolsGetResponse(RootModel[List[PoolsGetResponseItem]]):
    root: Annotated[List[PoolsGetResponseItem], Field(description='')]


PoolsPostResponse = ClusterReplicationPostResponse


PoolsPoolidDeleteResponse = ClusterReplicationPostResponse


class Member(BaseModel):
    id: Annotated[Optional[str], Field(description='')] = None
    node: Annotated[Optional[str], Field(description='')] = None
    storage: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None
    vmid: Annotated[Optional[int], Field(description='')] = None


class Data53(BaseModel):
    comment: Annotated[Optional[str], Field(description='')] = None
    members: Annotated[Optional[List[Member]], Field(description='')] = None


class PoolsPoolidGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data53], Field(description='')] = None


PoolsPoolidPutResponse = ClusterReplicationPostResponse


class Data54(BaseModel):
    release: Annotated[Optional[str], Field(description='')] = None
    repoid: Annotated[Optional[str], Field(description='')] = None
    version: Annotated[Optional[str], Field(description='')] = None


class VersionGetResponse(BaseModel):
    errors: Optional[List[str]] = None
    data: Annotated[Optional[Data54], Field(description='')] = None


class AccessAcl(BaseModel):
    path: Annotated[Optional[str], Field(description='Access control path')] = None
    propagate: Annotated[
        Optional[int], Field(description='Allow to propagate (inherit) permissions.')
    ] = None
    roleid: Annotated[Optional[str], Field(description='')] = None
    type: Annotated[Optional[str], Field(description='')] = None
    ugid: Annotated[Optional[str], Field(description='')] = None


class AccessAclGetResponse(RootModel[List[AccessAcl]]):
    root: Annotated[List[AccessAcl], Field(description='')]
